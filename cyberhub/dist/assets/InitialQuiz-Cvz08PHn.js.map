{"version":3,"file":"InitialQuiz-Cvz08PHn.js","sources":["../../src/pages/DosAndDdos/InitialQuiz.jsx"],"sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { AuthContext } from '../../context/AuthContext';\r\nimport { getUserProgress, updateUserProgress } from '../../supabase/progress';\r\nimport AttackPagesHeader from '../../components/AttackPagesHeader/AttackPagesHeader';\r\n\r\nconst InitialQuiz = () => {\r\n  const { user } = useContext(AuthContext);\r\n  const navigate = useNavigate();\r\n  const [currentQuestion, setCurrentQuestion] = useState(0);\r\n  const [score, setScore] = useState(0);\r\n  const [showScore, setShowScore] = useState(false);\r\n  const [progress, setProgress] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (!user) {\r\n      navigate('/login');\r\n      return;\r\n    }\r\n\r\n    const fetchProgress = async () => {\r\n      try {\r\n        const userProgress = await getUserProgress(user.id);\r\n        if (!userProgress?.progress?.dosddos) {\r\n          const initialProgress = {\r\n            ...userProgress?.progress,\r\n            dosddos: {\r\n              article: { completed: false, progress: 0 },\r\n              initialQuiz: { completed: false, score: 0 },\r\n              labs: { completed: false },\r\n              finalQuiz: { completed: false }\r\n            }\r\n          };\r\n          await updateUserProgress(user.id, initialProgress);\r\n          setProgress(initialProgress);\r\n        } else {\r\n          setProgress(userProgress.progress);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching progress:', error);\r\n      }\r\n    };\r\n    fetchProgress();\r\n  }, [user, navigate]);\r\n\r\n  const updateQuizProgress = async (finalScore) => {\r\n    if (!user || !progress) return;\r\n\r\n    const updatedProgress = {\r\n      ...progress,\r\n      dosddos: {\r\n        ...progress.dosddos,\r\n        initialQuiz: {\r\n          completed: true,\r\n          score: finalScore\r\n        }\r\n      }\r\n    };\r\n\r\n    try {\r\n      await updateUserProgress(user.id, updatedProgress);\r\n      setProgress(updatedProgress);\r\n    } catch (error) {\r\n      console.error('Error updating progress:', error);\r\n    }\r\n  };\r\n\r\n  const [selectedAnswer, setSelectedAnswer] = useState(null);\r\n  const [isCorrect, setIsCorrect] = useState(null);\r\n\r\n  const questions = [\r\n    {\r\n      questionText: \"What is the primary characteristic of a DDoS attack compared to a DoS attack?\",\r\n      answerOptions: [\r\n        { text: \"Uses multiple compromised systems (botnet)\", isCorrect: true },\r\n        { text: \"Only targets web servers\", isCorrect: false },\r\n        { text: \"Always uses HTTP requests\", isCorrect: false },\r\n        { text: \"Takes longer to execute\", isCorrect: false },\r\n      ],\r\n    },\r\n    {\r\n      questionText: \"Which statement about DoS attacks is true?\",\r\n      answerOptions: [\r\n        { text: \"They always require multiple attackers\", isCorrect: false },\r\n        { text: \"They aim to make services unavailable to legitimate users\", isCorrect: true },\r\n        { text: \"They only work on small networks\", isCorrect: false },\r\n        { text: \"They primarily steal data\", isCorrect: false },\r\n      ],\r\n    },\r\n    {\r\n      questionText: \"What is a key feature of HTTP flood attacks?\",\r\n      answerOptions: [\r\n        { text: \"They only use invalid requests\", isCorrect: false },\r\n        { text: \"They target database servers exclusively\", isCorrect: false },\r\n        { text: \"They send legitimate-looking requests in high volume\", isCorrect: true },\r\n        { text: \"They modify server configurations\", isCorrect: false },\r\n      ],\r\n    },\r\n    {\r\n      questionText: \"Which protection method is most effective against DoS attacks?\",\r\n      answerOptions: [\r\n        { text: \"Rate limiting and traffic filtering\", isCorrect: true },\r\n        { text: \"Changing server passwords regularly\", isCorrect: false },\r\n        { text: \"Disabling all network ports\", isCorrect: false },\r\n        { text: \"Using only HTTP/2\", isCorrect: false },\r\n      ],\r\n    },\r\n    {\r\n      questionText: \"What makes DDoS attacks harder to defend against?\",\r\n      answerOptions: [\r\n        { text: \"They only use encrypted traffic\", isCorrect: false },\r\n        { text: \"They come from multiple sources simultaneously\", isCorrect: true },\r\n        { text: \"They only target specific ports\", isCorrect: false },\r\n        { text: \"They require special software\", isCorrect: false },\r\n      ],\r\n    },\r\n    {\r\n      questionText: \"Which is a recommended mitigation strategy for DoS/DDoS attacks?\",\r\n      answerOptions: [\r\n        { text: \"Removing all security measures\", isCorrect: false },\r\n        { text: \"Using Content Delivery Networks (CDNs)\", isCorrect: true },\r\n        { text: \"Disabling all network monitoring\", isCorrect: false },\r\n        { text: \"Reducing server capacity\", isCorrect: false },\r\n      ],\r\n    }\r\n  ];\r\n\r\n  const handleAnswerClick = async (isCorrect, index) => {\r\n    setSelectedAnswer(index);\r\n    setIsCorrect(isCorrect);\r\n    \r\n    if (isCorrect) {\r\n      setScore(score + 1);\r\n    }\r\n    \r\n    setTimeout(async () => {\r\n      if (currentQuestion < questions.length - 1) {\r\n        setCurrentQuestion(currentQuestion + 1);\r\n      } else {\r\n        setShowScore(true);\r\n        const finalScore = ((score + (isCorrect ? 1 : 0)) / questions.length) * 100;\r\n        await updateQuizProgress(finalScore);\r\n      }\r\n      setSelectedAnswer(null);\r\n      setIsCorrect(null);\r\n    }, 1000);\r\n  };\r\n\r\n  const handleNextQuestion = () => {\r\n    const nextQuestion = currentQuestion + 1;\r\n    if (nextQuestion < questions.length) {\r\n      setCurrentQuestion(nextQuestion);\r\n    }\r\n  };\r\n\r\n  const handlePreviousQuestion = () => {\r\n    if (currentQuestion > 0) {\r\n      setCurrentQuestion(currentQuestion - 1);\r\n      const prevQuestion = questions[currentQuestion - 1];\r\n      const prevAnswer = prevQuestion.answerOptions.find(option => option.isCorrect);\r\n      if (prevAnswer) {\r\n        setScore(score - 1);\r\n      }\r\n    }\r\n  };\r\n\r\n  const calculatePercentage = () => {\r\n    return Math.round((score / questions.length) * 100);\r\n  };\r\n\r\n  const getScoreMessage = () => {\r\n    const percentage = calculatePercentage();\r\n    if (percentage >= 80) {\r\n      return \"Excellent! You have a strong understanding of DoS/DDoS attacks.\";\r\n    } else if (percentage >= 60) {\r\n      return \"Good job! You grasp the basics but might want to review some concepts.\";\r\n    } else {\r\n      return \"You might want to review the material and try again.\";\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{\r\n      backgroundColor: '#151B3B',\r\n      minHeight: '100vh',\r\n      display: 'flex',\r\n      flexDirection: 'column'\r\n    }}>\r\n      <AttackPagesHeader pageType=\"dos\" />\r\n      <div style={{\r\n        flex: 1,\r\n        color: '#fff',\r\n        padding: '40px',\r\n        fontFamily: 'Georgia, serif'\r\n      }}>\r\n        <div style={{\r\n          maxWidth: '800px',\r\n          margin: '0 auto',\r\n          backgroundColor: '#1a2147',\r\n          padding: '30px',\r\n          borderRadius: '10px',\r\n          boxShadow: '0 0 20px rgba(0,0,0,0.3)'\r\n        }}>\r\n          {showScore ? (\r\n            <div style={{ textAlign: 'center' }}>\r\n              <h2 style={{ color: '#5DADE2', marginBottom: '20px' }}>Quiz Complete!</h2>\r\n              <div style={{ \r\n                fontSize: '24px', \r\n                marginBottom: '20px',\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n                gap: '10px',\r\n                alignItems: 'center'\r\n              }}>\r\n                <p>You scored {score} out of {questions.length}</p>\r\n                <p style={{ color: '#F1C40F' }}>\r\n                  Percentage: {calculatePercentage()}%\r\n                </p>\r\n              </div>\r\n              <p style={{ fontSize: '18px', marginBottom: '30px', color: '#F1C40F' }}>\r\n                {getScoreMessage()}\r\n              </p>\r\n              <div style={{ display: 'flex', flexDirection: 'column', gap: '20px' }}>\r\n                <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                  <button\r\n                    onClick={() => {\r\n                      setShowScore(false);\r\n                      setCurrentQuestion(0);\r\n                      setScore(0);\r\n                    }}\r\n                    style={{\r\n                      backgroundColor: '#5DADE2',\r\n                      color: '#fff',\r\n                      padding: '10px 20px',\r\n                      borderRadius: '5px',\r\n                      border: 'none',\r\n                      cursor: 'pointer',\r\n                      display: 'flex',\r\n                      alignItems: 'center',\r\n                      gap: '10px'\r\n                    }}\r\n                  >\r\n                    <span style={{ fontSize: '20px' }}>‚Üê</span>\r\n                    Retake Quiz\r\n                  </button>\r\n                  <Link\r\n                    to=\"/DosAndDdos/AttackPages/DosNormal\"\r\n                    style={{\r\n                      backgroundColor: '#F1C40F',\r\n                      color: '#000',\r\n                      padding: '10px 20px',\r\n                      borderRadius: '5px',\r\n                      textDecoration: 'none'\r\n                    }}\r\n                  >\r\n                    Continue to Dos Attack\r\n                  </Link>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <>\r\n              <div style={{ marginBottom: '20px' }}>\r\n                <h3 style={{ color: '#5DADE2', marginBottom: '10px' }}>\r\n                  Question {currentQuestion + 1}/{questions.length}\r\n                </h3>\r\n                <div style={{ \r\n                  height: '10px', \r\n                  backgroundColor: '#2C3E50',\r\n                  borderRadius: '5px',\r\n                  overflow: 'hidden'\r\n                }}>\r\n                  <div style={{\r\n                    width: `${((currentQuestion + 1) / questions.length) * 100}%`,\r\n                    height: '100%',\r\n                    backgroundColor: '#5DADE2',\r\n                    transition: 'width 0.3s ease'\r\n                  }} />\r\n                </div>\r\n              </div>\r\n\r\n              <div style={{ marginBottom: '30px' }}>\r\n                <h2 style={{ color: '#F1C40F', marginBottom: '20px' }}>\r\n                  {questions[currentQuestion].questionText}\r\n                </h2>\r\n                <div style={{ display: 'flex', flexDirection: 'column', gap: '10px' }}>\r\n                  {questions[currentQuestion].answerOptions.map((option, index) => (\r\n                    <button\r\n                      key={index}\r\n                      onClick={() => {\r\n                        handleAnswerClick(option.isCorrect);\r\n                        if (currentQuestion < questions.length - 1) {\r\n                          setTimeout(() => handleNextQuestion(), 500);\r\n                        } else {\r\n                          setTimeout(() => setShowScore(true), 500);\r\n                        }\r\n                      }}\r\n                      style={{\r\n                        backgroundColor: '#2C3E50',\r\n                        border: 'none',\r\n                        padding: '15px',\r\n                        borderRadius: '5px',\r\n                        color: '#fff',\r\n                        cursor: 'pointer',\r\n                        textAlign: 'left',\r\n                        transition: 'all 0.3s',\r\n                        position: 'relative',\r\n                        overflow: 'hidden'\r\n                      }}\r\n                      onMouseEnter={(e) => {\r\n                        e.currentTarget.style.backgroundColor = '#34495E';\r\n                        e.currentTarget.style.transform = 'translateY(-2px)';\r\n                        e.currentTarget.style.boxShadow = '0 4px 8px rgba(0,0,0,0.2)';\r\n                      }}\r\n                      onMouseLeave={(e) => {\r\n                        e.currentTarget.style.backgroundColor = '#2C3E50';\r\n                        e.currentTarget.style.transform = 'translateY(0)';\r\n                        e.currentTarget.style.boxShadow = 'none';\r\n                      }}\r\n                    >\r\n                      <div style={{ display: 'flex', alignItems: 'center', gap: '10px' }}>\r\n                        <span style={{ \r\n                          width: '25px',\r\n                          height: '25px',\r\n                          borderRadius: '50%',\r\n                          backgroundColor: '#5DADE2',\r\n                          display: 'flex',\r\n                          alignItems: 'center',\r\n                          justifyContent: 'center',\r\n                          fontSize: '14px',\r\n                          fontWeight: 'bold'\r\n                        }}>\r\n                          {String.fromCharCode(65 + index)}\r\n                        </span>\r\n                        {option.text}\r\n                      </div>\r\n                    </button>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n\r\n              {/* Question Navigation Dots */}\r\n              <div style={{ \r\n                display: 'flex', \r\n                justifyContent: 'center',\r\n                gap: '10px',\r\n                marginTop: '30px'\r\n              }}>\r\n                {questions.map((_, index) => (\r\n                  <button\r\n                    key={index}\r\n                    onClick={() => setCurrentQuestion(index)}\r\n                    style={{\r\n                      width: '12px',\r\n                      height: '12px',\r\n                      borderRadius: '50%',\r\n                      backgroundColor: currentQuestion === index ? '#F1C40F' : '#2C3E50',\r\n                      border: 'none',\r\n                      cursor: 'pointer',\r\n                      transition: 'all 0.3s'\r\n                    }}\r\n                    onMouseEnter={(e) => {\r\n                      if (currentQuestion !== index) {\r\n                        e.currentTarget.style.backgroundColor = '#34495E';\r\n                      }\r\n                    }}\r\n                    onMouseLeave={(e) => {\r\n                      if (currentQuestion !== index) {\r\n                        e.currentTarget.style.backgroundColor = '#2C3E50';\r\n                      }\r\n                    }}\r\n                  />\r\n                ))}\r\n              </div>\r\n            </>\r\n          )}\r\n        </div>\r\n        {/* Bottom navigation */}\r\n        <div style={{\r\n          maxWidth: '800px',\r\n          margin: '20px auto 0',\r\n          display: 'flex',\r\n          justifyContent: 'space-between'\r\n        }}>\r\n          <div style={{ display: 'flex', gap: '10px' }}>\r\n            <Link\r\n              to=\"/\"\r\n              style={{\r\n                backgroundColor: '#5DADE2',\r\n                color: '#fff',\r\n                padding: '10px 20px',\r\n                borderRadius: '5px',\r\n                textDecoration: 'none',\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                gap: '10px'\r\n              }}\r\n            >\r\n              <span style={{ fontSize: '20px' }}>üè†</span>\r\n              Home\r\n            </Link>\r\n            <Link\r\n              to=\"/DosAndDdos/Article\"\r\n              style={{\r\n                backgroundColor: '#34495E',\r\n                color: '#fff',\r\n                padding: '10px 20px',\r\n                borderRadius: '5px',\r\n                textDecoration: 'none',\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                gap: '10px'\r\n              }}\r\n            >\r\n              <span style={{ fontSize: '20px' }}>‚Üê</span>\r\n              Return to Article\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InitialQuiz;\r\n"],"names":["InitialQuiz","user","useContext","AuthContext","navigate","useNavigate","currentQuestion","setCurrentQuestion","useState","score","setScore","showScore","setShowScore","progress","setProgress","useEffect","userProgress","getUserProgress","id","dosddos","initialProgress","article","completed","initialQuiz","labs","finalQuiz","updateUserProgress","error","console","updateQuizProgress","finalScore","updatedProgress","selectedAnswer","setSelectedAnswer","isCorrect","setIsCorrect","questions","questionText","answerOptions","text","handleAnswerClick","index","setTimeout","length","handleNextQuestion","nextQuestion","calculatePercentage","Math","round","getScoreMessage","percentage","jsxs","style","backgroundColor","minHeight","display","flexDirection","children","jsx","AttackPagesHeader","pageType","flex","color","padding","fontFamily","maxWidth","margin","borderRadius","boxShadow","textAlign","marginBottom","fontSize","gap","alignItems","justifyContent","onClick","border","cursor","Link","to","textDecoration","Fragment","height","overflow","width","transition","map","option","position","onMouseEnter","e","currentTarget","transform","onMouseLeave","fontWeight","String","fromCharCode","marginTop","_"],"mappings":"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"}