{"version":3,"file":"FinalQuiz-LcbSLdvU.js","sources":["../../src/pages/DosAndDdos/FinalQuiz.jsx"],"sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { AuthContext } from '../../context/AuthContext';\r\nimport { getUserProgress, updateUserProgress } from '../../supabase/progress';\r\nimport AttackPagesHeader from '../../components/AttackPagesHeader/AttackPagesHeader';\r\n\r\nconst FinalQuiz = () => {\r\n  const { user } = useContext(AuthContext);\r\n  const navigate = useNavigate();\r\n  const [currentQuestion, setCurrentQuestion] = useState(0);\r\n  const [score, setScore] = useState(0);\r\n  const [showScore, setShowScore] = useState(false);\r\n  const [selectedAnswer, setSelectedAnswer] = useState(null);\r\n  const [isCorrect, setIsCorrect] = useState(null);\r\n  const [isSaving, setIsSaving] = useState(false);\r\n\r\n  // Quiz questions array remains unchanged\r\n  const questions = [\r\n    {\r\n      questionText: \"What is the main purpose of a Slowloris attack?\",\r\n      answerOptions: [\r\n        { text: \"To exhaust server resources by keeping connections open\", isCorrect: true },\r\n        { text: \"To flood the server with rapid requests\", isCorrect: false },\r\n        { text: \"To encrypt server data\", isCorrect: false },\r\n        { text: \"To steal user credentials\", isCorrect: false },\r\n      ],\r\n    },\r\n    {\r\n      questionText: \"How does an ICMP flood attack work?\",\r\n      answerOptions: [\r\n        { text: \"By sending malformed packets\", isCorrect: false },\r\n        { text: \"By overwhelming with ping requests\", isCorrect: true },\r\n        { text: \"By encrypting network traffic\", isCorrect: false },\r\n        { text: \"By modifying routing tables\", isCorrect: false },\r\n      ],\r\n    },\r\n    {\r\n      questionText: \"What makes SYN flood attacks effective?\",\r\n      answerOptions: [\r\n        { text: \"They encrypt all traffic\", isCorrect: false },\r\n        { text: \"They modify server configurations\", isCorrect: false },\r\n        { text: \"They exhaust connection resources with half-open connections\", isCorrect: true },\r\n        { text: \"They delete server files\", isCorrect: false },\r\n      ],\r\n    },\r\n    {\r\n      questionText: \"Which mitigation technique is effective against UDP floods?\",\r\n      answerOptions: [\r\n        { text: \"Rate limiting specific UDP ports\", isCorrect: true },\r\n        { text: \"Disabling all ports\", isCorrect: false },\r\n        { text: \"Removing firewall rules\", isCorrect: false },\r\n        { text: \"Increasing server memory\", isCorrect: false },\r\n      ],\r\n    },\r\n    {\r\n      questionText: \"What is a key characteristic of HTTP flood attacks?\",\r\n      answerOptions: [\r\n        { text: \"They only use invalid requests\", isCorrect: false },\r\n        { text: \"They generate legitimate-looking requests\", isCorrect: true },\r\n        { text: \"They modify server files\", isCorrect: false },\r\n        { text: \"They only work on specific ports\", isCorrect: false },\r\n      ],\r\n    },\r\n    {\r\n      questionText: \"Which is the most effective DDoS protection strategy?\",\r\n      answerOptions: [\r\n        { text: \"Disabling all network services\", isCorrect: false },\r\n        { text: \"Using multiple layers of protection (CDN, WAF, rate limiting)\", isCorrect: true },\r\n        { text: \"Blocking all international traffic\", isCorrect: false },\r\n        { text: \"Reducing server capacity\", isCorrect: false },\r\n      ],\r\n    },\r\n    {\r\n      questionText: \"What is the primary difference between application-layer and network-layer DDoS attacks?\",\r\n      answerOptions: [\r\n        { text: \"Target layer in the OSI model\", isCorrect: true },\r\n        { text: \"Attack duration\", isCorrect: false },\r\n        { text: \"Number of attackers\", isCorrect: false },\r\n        { text: \"Traffic encryption\", isCorrect: false },\r\n      ],\r\n    },\r\n    {\r\n      questionText: \"How do volumetric DDoS attacks work?\",\r\n      answerOptions: [\r\n        { text: \"By consuming bandwidth with massive traffic\", isCorrect: true },\r\n        { text: \"By targeting specific applications\", isCorrect: false },\r\n        { text: \"By modifying server configurations\", isCorrect: false },\r\n        { text: \"By exploiting software vulnerabilities\", isCorrect: false },\r\n      ],\r\n    },\r\n    {\r\n      questionText: \"What role does traffic analysis play in DDoS mitigation?\",\r\n      answerOptions: [\r\n        { text: \"Identifying attack patterns and sources\", isCorrect: true },\r\n        { text: \"Increasing server capacity\", isCorrect: false },\r\n        { text: \"Encrypting network traffic\", isCorrect: false },\r\n        { text: \"Managing user accounts\", isCorrect: false },\r\n      ],\r\n    },\r\n    {\r\n      questionText: \"Which tool is commonly used for DDoS protection?\",\r\n      answerOptions: [\r\n        { text: \"Web Application Firewall (WAF)\", isCorrect: true },\r\n        { text: \"Text editor\", isCorrect: false },\r\n        { text: \"Email client\", isCorrect: false },\r\n        { text: \"File compression software\", isCorrect: false },\r\n      ],\r\n    },\r\n    {\r\n      questionText: \"What is the purpose of DDoS scrubbing centers?\",\r\n      answerOptions: [\r\n        { text: \"To filter and clean malicious traffic\", isCorrect: true },\r\n        { text: \"To store backup data\", isCorrect: false },\r\n        { text: \"To host websites\", isCorrect: false },\r\n        { text: \"To manage user accounts\", isCorrect: false },\r\n      ],\r\n    },\r\n    {\r\n      questionText: \"How can organizations prepare for DDoS attacks?\",\r\n      answerOptions: [\r\n        { text: \"Implementing a comprehensive DDoS response plan\", isCorrect: true },\r\n        { text: \"Removing all online services\", isCorrect: false },\r\n        { text: \"Using only local networks\", isCorrect: false },\r\n        { text: \"Disabling security measures\", isCorrect: false },\r\n      ],\r\n    },\r\n    // Practical command questions added\r\n    {\r\n      questionText: \"Which command is used to launch a Slowloris attack using slowhttptest?\",\r\n      answerOptions: [\r\n        { text: \"slowhttptest -c 1000 -H -i 10 -r 200 -t GET -u http://target.com\", isCorrect: true },\r\n        { text: \"hping3 -S 192.168.1.1 -p 80\", isCorrect: false },\r\n        { text: \"nmap -sS 192.168.1.1\", isCorrect: false },\r\n        { text: \"ping 192.168.1.1\", isCorrect: false },\r\n      ],\r\n    },\r\n    {\r\n      questionText: \"What tool is commonly used for DDoS testing and simulation?\",\r\n      answerOptions: [\r\n        { text: \"slowhttptest\", isCorrect: true },\r\n        { text: \"wireshark\", isCorrect: false },\r\n        { text: \"tcpdump\", isCorrect: false },\r\n        { text: \"curl\", isCorrect: false },\r\n      ],\r\n    },\r\n    {\r\n      questionText: \"Which command can be used to simulate a UDP flood attack?\",\r\n      answerOptions: [\r\n        { text: \"hping3 --udp -p 80 --flood 192.168.1.1\", isCorrect: true },\r\n        { text: \"ping 192.168.1.1\", isCorrect: false },\r\n        { text: \"nmap -sU 192.168.1.1\", isCorrect: false },\r\n        { text: \"curl http://example.com\", isCorrect: false },\r\n      ],\r\n    },// ... rest of the questions remain unchanged\r\n  ];\r\n\r\n  const handleAnswerClick = (isCorrect, index) => {\r\n    setSelectedAnswer(index);\r\n    setIsCorrect(isCorrect);\r\n    \r\n    if (isCorrect) {\r\n      setScore(score + 1);\r\n    }\r\n    \r\n    setTimeout(() => {\r\n      if (currentQuestion < questions.length - 1) {\r\n        setCurrentQuestion(currentQuestion + 1);\r\n      } else {\r\n        setShowScore(true);\r\n      }\r\n      setSelectedAnswer(null);\r\n      setIsCorrect(null);\r\n    }, 1000);\r\n  };\r\n\r\n  const calculatePercentage = () => {\r\n    return Math.round((score / questions.length) * 100);\r\n  };\r\n\r\n  const [progress, setProgress] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (!user) {\r\n      navigate('/login');\r\n      return;\r\n    }\r\n\r\n    const fetchProgress = async () => {\r\n      try {\r\n        const userProgress = await getUserProgress(user.id);\r\n        if (!userProgress?.progress?.dosddos) {\r\n          const initialProgress = {\r\n            ...userProgress?.progress,\r\n            dosddos: {\r\n              article: { completed: false, progress: 0 },\r\n              initialQuiz: { completed: false },\r\n              labs: { completed: false },\r\n              finalQuiz: { completed: false, score: 0 }\r\n            }\r\n          };\r\n          await updateUserProgress(user.id, initialProgress);\r\n          setProgress(initialProgress);\r\n        } else {\r\n          setProgress(userProgress.progress);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching progress:', error);\r\n      }\r\n    };\r\n    fetchProgress();\r\n  }, [user, navigate]);\r\n\r\n  const saveProgress = async () => {\r\n    if (!user || !progress) return;\r\n    \r\n    setIsSaving(true);\r\n    try {\r\n      const updatedProgress = {\r\n        ...progress,\r\n        dosddos: {\r\n          ...progress.dosddos,\r\n          finalQuiz: {\r\n            completed: true,\r\n            score: calculatePercentage()\r\n          }\r\n        }\r\n      };\r\n\r\n      await updateUserProgress(user.id, updatedProgress);\r\n      setProgress(updatedProgress);\r\n    } catch (error) {\r\n      console.error('Error saving progress:', error);\r\n    } finally {\r\n      setIsSaving(false);\r\n    }\r\n  };\r\n\r\n  const getScoreMessage = () => {\r\n    const percentage = calculatePercentage();\r\n    if (percentage >= 80) {\r\n      return \"Excellent! You have mastered DoS/DDoS attack concepts and protections!\";\r\n    } else if (percentage >= 60) {\r\n      return \"Good job! You understand most concepts but might want to review some topics.\";\r\n    } else {\r\n      return \"You might want to review the material and labs before proceeding.\";\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{\r\n      backgroundColor: '#151B3B',\r\n      minHeight: '100vh',\r\n      display: 'flex',\r\n      flexDirection: 'column'\r\n    }}>\r\n      <AttackPagesHeader pageType=\"dos\" />\r\n      <div style={{\r\n        padding: '40px',\r\n        fontFamily: 'Georgia, serif',\r\n        color: '#fff',\r\n        flex: 1,\r\n        display: 'flex',\r\n        flexDirection: 'column'\r\n      }}>\r\n        <div style={{\r\n          maxWidth: '800px',\r\n          margin: '0 auto',\r\n          backgroundColor: '#1a2147',\r\n          padding: '30px',\r\n          borderRadius: '10px',\r\n          boxShadow: '0 0 20px rgba(0,0,0,0.3)',\r\n          flex: 1\r\n        }}>\r\n          {showScore ? (\r\n            <div style={{ textAlign: 'center' }}>\r\n              <h2 style={{ color: '#5DADE2', marginBottom: '20px' }}>Final Quiz Complete!</h2>\r\n              <div style={{ \r\n                fontSize: '24px', \r\n                marginBottom: '20px',\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n                gap: '10px',\r\n                alignItems: 'center'\r\n              }}>\r\n                <p>You scored {score} out of {questions.length}</p>\r\n                <p style={{ color: '#F1C40F' }}>\r\n                  Percentage: {calculatePercentage()}%\r\n                </p>\r\n              </div>\r\n              <p style={{ fontSize: '18px', marginBottom: '30px', color: '#F1C40F' }}>\r\n                {getScoreMessage()}\r\n              </p>\r\n              <div style={{ display: 'flex', flexDirection: 'column', gap: '20px' }}>\r\n                <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                  <button\r\n                    onClick={() => {\r\n                      setShowScore(false);\r\n                      setCurrentQuestion(0);\r\n                      setScore(0);\r\n                    }}\r\n                    style={{\r\n                      backgroundColor: '#5DADE2',\r\n                      color: '#fff',\r\n                      padding: '10px 20px',\r\n                      borderRadius: '5px',\r\n                      border: 'none',\r\n                      cursor: 'pointer',\r\n                      display: 'flex',\r\n                      alignItems: 'center',\r\n                      gap: '10px'\r\n                    }}\r\n                  >\r\n                    <span style={{ fontSize: '20px' }}>←</span>\r\n                    Retake Quiz\r\n                  </button>\r\n                  <Link\r\n                    to=\"/DosAndDdos/HomePage\"\r\n                    style={{\r\n                      backgroundColor: '#F1C40F',\r\n                      color: '#000',\r\n                      padding: '10px 20px',\r\n                      borderRadius: '5px',\r\n                      textDecoration: 'none'\r\n                    }}\r\n                    onClick={saveProgress}\r\n                  >\r\n                    Complete Level 1 \r\n                  </Link>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <>\r\n              <div style={{ marginBottom: '20px' }}>\r\n                <h3 style={{ color: '#5DADE2', marginBottom: '10px' }}>\r\n                  Question {currentQuestion + 1}/{questions.length}\r\n                </h3>\r\n                <div style={{ \r\n                  height: '10px', \r\n                  backgroundColor: '#2C3E50',\r\n                  borderRadius: '5px',\r\n                  overflow: 'hidden'\r\n                }}>\r\n                  <div style={{\r\n                    width: `${((currentQuestion + 1) / questions.length) * 100}%`,\r\n                    height: '100%',\r\n                    backgroundColor: '#5DADE2',\r\n                    transition: 'width 0.3s ease'\r\n                  }} />\r\n                </div>\r\n              </div>\r\n\r\n              <div style={{ marginBottom: '30px' }}>\r\n                <h2 style={{ color: '#F1C40F', marginBottom: '20px' }}>\r\n                  {questions[currentQuestion].questionText}\r\n                </h2>\r\n                <div style={{ display: 'flex', flexDirection: 'column', gap: '10px' }}>\r\n                  {questions[currentQuestion].answerOptions.map((option, index) => (\r\n                    <button\r\n                      key={index}\r\n                      onClick={() => handleAnswerClick(option.isCorrect, index)}\r\n                      disabled={selectedAnswer !== null}\r\n                      style={{\r\n                        backgroundColor: selectedAnswer === index \r\n                          ? (isCorrect ? '#2ecc71' : '#e74c3c') \r\n                          : '#2C3E50',\r\n                        border: 'none',\r\n                        padding: '15px',\r\n                        borderRadius: '5px',\r\n                        color: '#fff',\r\n                        cursor: selectedAnswer === null ? 'pointer' : 'default',\r\n                        textAlign: 'left',\r\n                        transition: 'all 0.3s',\r\n                        transform: selectedAnswer === index ? 'scale(1.02)' : 'scale(1)',\r\n                        boxShadow: selectedAnswer === index ? '0 4px 8px rgba(0,0,0,0.2)' : 'none'\r\n                      }}\r\n                    >\r\n                      <div style={{ display: 'flex', alignItems: 'center', gap: '10px' }}>\r\n                        <span style={{ \r\n                          width: '25px',\r\n                          height: '25px',\r\n                          borderRadius: '50%',\r\n                          backgroundColor: '#5DADE2',\r\n                          display: 'flex',\r\n                          alignItems: 'center',\r\n                          justifyContent: 'center',\r\n                          fontSize: '14px',\r\n                          fontWeight: 'bold'\r\n                        }}>\r\n                          {String.fromCharCode(65 + index)}\r\n                        </span>\r\n                        {option.text}\r\n                      </div>\r\n                    </button>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n\r\n              {/* Question Navigation Dots */}\r\n              <div style={{ \r\n                display: 'flex', \r\n                justifyContent: 'center',\r\n                gap: '10px',\r\n                marginTop: '30px'\r\n              }}>\r\n                {questions.map((_, index) => (\r\n                  <button\r\n                    key={index}\r\n                    onClick={() => setCurrentQuestion(index)}\r\n                    style={{\r\n                      width: '12px',\r\n                      height: '12px',\r\n                      borderRadius: '50%',\r\n                      backgroundColor: currentQuestion === index ? '#F1C40F' : '#2C3E50',\r\n                      border: 'none',\r\n                      cursor: 'pointer',\r\n                      transition: 'all 0.3s'\r\n                    }}\r\n                    onMouseEnter={(e) => {\r\n                      if (currentQuestion !== index) {\r\n                        e.currentTarget.style.backgroundColor = '#34495E';\r\n                      }\r\n                    }}\r\n                    onMouseLeave={(e) => {\r\n                      if (currentQuestion !== index) {\r\n                        e.currentTarget.style.backgroundColor = '#2C3E50';\r\n                      }\r\n                    }}\r\n                  />\r\n                ))}\r\n              </div>\r\n            </>\r\n          )}\r\n        </div>\r\n        {/* Bottom navigation */}\r\n        <div style={{\r\n          maxWidth: '800px',\r\n          margin: '20px auto 0',\r\n          display: 'flex',\r\n          justifyContent: 'space-between'\r\n        }}>\r\n          <div style={{ display: 'flex', gap: '10px' }}>\r\n            <Link\r\n              to=\"/\"\r\n              style={{\r\n                backgroundColor: '#5DADE2',\r\n                color: '#fff',\r\n                padding: '10px 20px',\r\n                borderRadius: '5px',\r\n                textDecoration: 'none',\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                gap: '10px'\r\n              }}\r\n            >\r\n              <span style={{ fontSize: '20px' }}>🏠</span>\r\n              Home\r\n            </Link>\r\n            <Link\r\n              to=\"/DosAndDdos/AttackPages/CommonAttacks\"\r\n              style={{\r\n                backgroundColor: '#34495E',\r\n                color: '#fff',\r\n                padding: '10px 20px',\r\n                borderRadius: '5px',\r\n                textDecoration: 'none',\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                gap: '10px'\r\n              }}\r\n            >\r\n              <span style={{ fontSize: '20px' }}>←</span>\r\n              Return to Common Attacks\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FinalQuiz;\r\n"],"names":["FinalQuiz","user","useContext","AuthContext","navigate","useNavigate","currentQuestion","setCurrentQuestion","useState","score","setScore","showScore","setShowScore","selectedAnswer","setSelectedAnswer","isCorrect","setIsCorrect","isSaving","setIsSaving","questions","questionText","answerOptions","text","handleAnswerClick","index","setTimeout","length","calculatePercentage","Math","round","progress","setProgress","useEffect","userProgress","getUserProgress","id","dosddos","initialProgress","article","completed","initialQuiz","labs","finalQuiz","updateUserProgress","error","console","saveProgress","updatedProgress","getScoreMessage","percentage","jsxs","style","backgroundColor","minHeight","display","flexDirection","children","jsx","AttackPagesHeader","pageType","padding","fontFamily","color","flex","maxWidth","margin","borderRadius","boxShadow","textAlign","marginBottom","fontSize","gap","alignItems","justifyContent","onClick","border","cursor","Link","to","textDecoration","Fragment","height","overflow","width","transition","map","option","disabled","transform","fontWeight","String","fromCharCode","marginTop","_","onMouseEnter","e","currentTarget","onMouseLeave"],"mappings":"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"}