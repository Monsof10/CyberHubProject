{"version":3,"file":"SimpleTerminal-DysmQor3.js","sources":["../../src/components/SimpleTerminal.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\n\r\nconst SimpleTerminal = ({ onCommand }) => {\r\n  const [commandHistory, setCommandHistory] = useState([]);\r\n  const [currentCommand, setCurrentCommand] = useState('');\r\n  const [currentPath, setCurrentPath] = useState('/home/kali');\r\n  const [commandBuffer, setCommandBuffer] = useState([]);\r\n  const [bufferIndex, setBufferIndex] = useState(-1);\r\n  const inputRef = useRef(null);\r\n  const terminalRef = useRef(null);\r\n\r\n  // Simulated file system\r\n  const fileSystem = {\r\n    '/home/kali': {\r\n      type: 'dir',\r\n      contents: {\r\n        'ddos.py': { type: 'file', content: '# DDoS Attack Script' },\r\n        'Dos.py': { type: 'file', content: '# DoS Attack Script' },\r\n        'http_flood.py': { type: 'file', content: '# HTTP Flood Attack Script' },\r\n        'slowloris.py': { type: 'file', content: '# Slowloris Attack Script' }\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (terminalRef.current) {\r\n      terminalRef.current.scrollTop = terminalRef.current.scrollHeight;\r\n    }\r\n  }, [commandHistory]);\r\n\r\n  const getDirectoryContents = (path) => {\r\n    const parts = path.split('/').filter(p => p);\r\n    let current = fileSystem;\r\n    for (const part of parts) {\r\n      current = current[part]?.contents;\r\n      if (!current) return null;\r\n    }\r\n    return current;\r\n  };\r\n\r\n  const getCurrentDirectory = () => {\r\n    const contents = getDirectoryContents(currentPath);\r\n    return contents ? Object.entries(contents).map(([name, info]) => ({\r\n      name,\r\n      type: info.type\r\n    })) : [];\r\n  };\r\n\r\n  const handleCommand = (cmd) => {\r\n    const parts = cmd.trim().split(' ');\r\n    const command = parts[0].toLowerCase();\r\n    const args = parts.slice(1);\r\n\r\n    // Handle empty command\r\n    if (!command) return '';\r\n\r\n    // Handle multiple arguments for commands\r\n    const flags = args.filter(arg => arg.startsWith('-'));\r\n    const nonFlags = args.filter(arg => !arg.startsWith('-'));\r\n\r\n    switch (command) {\r\n      case 'clear':\r\n        setCommandHistory([]);\r\n        return '';\r\n\r\n      case 'help':\r\n        return `Available commands:\r\n  ls [-l|-a]       List directory contents\r\n                   -l: detailed view\r\n                   -a: show hidden files\r\n  cd [dir]         Change directory\r\n                   ..: parent directory\r\n                   /: root directory\r\n                   ~: home directory\r\n  pwd              Print working directory\r\n  cat [file]       Display file contents\r\n  clear            Clear terminal screen\r\n  whoami           Print current user\r\n  hostname         Print system hostname\r\n  date             Print current date/time\r\n  help             Show this help message\r\n\r\n\r\nNotes:\r\n- Use Tab for command/file name completion\r\n- Use Up/Down arrows to navigate command history\r\n- Use Ctrl+C to cancel current command\r\n- Use Ctrl+L to clear screen (same as clear)\r\n- All commands are case-insensitive\r\n- Combine flags like -la for multiple options`;\r\n\r\n      case 'ls':\r\n        const files = getCurrentDirectory();\r\n        const showHidden = flags.includes('-a') || flags.includes('-la') || flags.includes('-al');\r\n        const showLong = flags.includes('-l') || flags.includes('-la') || flags.includes('-al');\r\n        return \"ddos.py Dos.py  http_flood.py  slowloris.py\"; \r\n        // Add . and .. to directory listing\r\n        const allFiles = [\r\n          { name: '.', type: 'dir' },\r\n          { name: '..', type: 'dir' },\r\n          ...files\r\n        ];\r\n        \r\n        const visibleFiles = allFiles.filter(f => showHidden || !f.name.startsWith('.'));\r\n        \r\n        if (showLong) {\r\n          const now = new Date();\r\n          return visibleFiles.map(f => {\r\n            const isDir = f.type === 'dir';\r\n            const perms = `${isDir ? 'd' : '-'}rwxr-xr-x`;\r\n            const size = '4096';\r\n            const date = now.toLocaleString('en-US', { month: 'short', day: '2-digit', hour: '2-digit', minute: '2-digit' });\r\n            const name = isDir ? `\\x1b[34m${f.name}/\\x1b[0m` : f.name;\r\n            return `${perms} 1 kali kali ${size} ${date} ${name}`;\r\n          }).join('\\n');\r\n        }\r\n        \r\n        return visibleFiles.map(f => \r\n          f.type === 'dir' ? `\\x1b[34m${f.name}/\\x1b[0m` : f.name\r\n        ).join('  ');\r\n\r\n      case 'pwd':\r\n        return currentPath;\r\n\r\n      case 'cd':\r\n        if (!args[0] || args[0] === '~' || args[0] === '~/') {\r\n          setCurrentPath('/home/kali');\r\n          return '';\r\n        }\r\n        \r\n        if (args[0] === '.') return '';\r\n        \r\n        if (args[0] === '..') {\r\n          const parentPath = currentPath.split('/').slice(0, -1).join('/') || '/home/kali';\r\n          setCurrentPath(parentPath);\r\n          return '';\r\n        }\r\n        \r\n        try {\r\n          const resolvedPath = args[0].startsWith('~/')\r\n            ? `/home/kali/${args[0].slice(2)}`\r\n            : args[0].startsWith('/') \r\n              ? args[0]\r\n              : `${currentPath}/${args[0]}`;\r\n              \r\n          // Clean up path (remove double slashes, resolve . and ..)\r\n          const cleanPath = resolvedPath\r\n            .replace(/\\/+/g, '/')\r\n            .replace(/\\/\\.\\//g, '/')\r\n            .replace(/[^/]+\\/\\.\\.\\//g, '');\r\n            \r\n          const targetDir = getDirectoryContents(cleanPath);\r\n          if (!targetDir) throw new Error(`no such directory: ${args[0]}`);\r\n          \r\n          setCurrentPath(cleanPath);\r\n          return '';\r\n        } catch (error) {\r\n          return `cd: ${error.message}`;\r\n        }\r\n\r\n      case 'cat':\r\n        if (!args[0]) return 'cat: missing file operand';\r\n        const dir = getDirectoryContents(currentPath);\r\n        const file = dir[args[0]];\r\n        if (!file) return `cat: ${args[0]}: No such file`;\r\n        if (file.type !== 'file') return `cat: ${args[0]}: Is a directory`;\r\n        return file.content;\r\n\r\n      case 'sudo':\r\n        const fullCommand = args.join(' ');\r\n        if (fullCommand === 'python3 ddos.py') {\r\n          onCommand('sudo python3 ddos.py');\r\n          return 'Starting DDoS attack...\\n' +\r\n                 'Attack initiated successfully.\\n' +\r\n                 'Monitor the traffic in the monitoring terminal.\\n' +\r\n                 'To stop the attack, run: sudo iptables -A INPUT -s 127.0.0.0/24 -j DROP';\r\n        } else if (fullCommand === 'iptables -A INPUT -s 127.0.0.0/24 -j DROP') {\r\n          onCommand('sudo iptables -A INPUT -s 127.0.0.0/24 -j DROP');\r\n          return 'Blocking attack traffic...\\n' +\r\n                 'Rule added successfully.\\n' +\r\n                 'Attack traffic has been blocked.\\n' +\r\n                 'System returning to normal operation.';\r\n        }\r\n        else if (fullCommand === 'python3 launch_dos.py') {\r\n          onCommand('sudo python3 launch_dos.py');\r\n          return 'Starting DoS attack...\\n' +\r\n                 'Attack initiated successfully.\\n' +\r\n                 'Monitor the traffic in the monitoring terminal.\\n' +\r\n                 'To stop the attack, run: sudo iptables -A INPUT -s 127.0.0.3 -j DROP';\r\n        }\r\n        else if (fullCommand === 'iptables -A INPUT -s 127.0.0.3 -j DROP') {\r\n          onCommand('sudo iptables -A INPUT -s 127.0.0.3 -j DROP');\r\n          return 'Blocking attack traffic...\\n' +\r\n                 'Rule added successfully.\\n' +\r\n                 'Attack traffic has been blocked.\\n' +\r\n                 'System returning to normal operation.';\r\n        }\r\n        else if (fullCommand === 'python3 launch_slowloris.py') {\r\n          onCommand('sudo python3 launch_slowloris.py');\r\n          return 'Starting SlowLoris attack...\\n' +\r\n                 'Attack initiated successfully.\\n' +\r\n                 'Monitor the traffic in the monitoring terminal.\\n' +\r\n                 'To stop the attack, run: sudo iptables -A INPUT -p tcp --syn --dport 4000 -m connlimit --connlimit-above 20 -j DROP';\r\n        }\r\n        else if (fullCommand === 'iptables -A INPUT -p tcp --syn --dport 4000 -m connlimit --connlimit-above 20 -j DROP') {\r\n          onCommand('sudo iptables -A INPUT -p tcp --syn --dport 4000 -m connlimit --connlimit-above 20 -j DROP');\r\n          return 'Blocking attack traffic...\\n' +\r\n                 'Rule added successfully.\\n' +\r\n                 'Attack traffic has been blocked.\\n' +\r\n                 'System returning to normal operation.';\r\n        }\r\n        else if (fullCommand === 'python3 launch_httpflood.py') {\r\n          onCommand('sudo python3 launch_httpflood.py');\r\n          return 'Starting Http Flood attack...\\n' +\r\n                 'Attack initiated successfully.\\n' +\r\n                 'Monitor the traffic in the monitoring terminal.\\n' +\r\n                 'To stop the attack, run: sudo iptables -A INPUT -p tcp --dport 80 -m limit --limit 100/minute -j ACCEPT';\r\n        }\r\n        else if (fullCommand === 'iptables -A INPUT -p tcp --dport 80 -m limit --limit 100/minute -j ACCEPT') {\r\n          onCommand('sudo iptables -A INPUT -p tcp --dport 80 -m limit --limit 100/minute -j ACCEPT');\r\n          return 'Blocking attack traffic...\\n' +\r\n                 'Rule added successfully.\\n' +\r\n                 'Attack traffic has been blocked.\\n' +\r\n                 'System returning to normal operation.';\r\n        }\r\n\r\n        return 'sudo: command not found or insufficient permissions';\r\n\r\n      case 'whoami':\r\n        return 'kali';\r\n\r\n      case 'hostname':\r\n        return 'kali-linux';\r\n\r\n      case 'date':\r\n        return new Date().toString();\r\n\r\n      case '':\r\n        return '';\r\n\r\n      default:\r\n        return `${command}: command not found`;\r\n    }\r\n  };\r\n\r\n  const handleKeyDown = (e) => {\r\n    if (e.key === 'Enter') {\r\n      if (currentCommand.trim()) {\r\n        setCommandBuffer(prev => [currentCommand, ...prev].slice(0, 50));\r\n        setBufferIndex(-1);\r\n      }\r\n      e.preventDefault();\r\n      \r\n      // Add command to history\r\n      const newHistory = [...commandHistory, { type: 'input', text: `${currentPath}$ ${currentCommand}` }];\r\n      \r\n      // Handle command and add output\r\n      const output = handleCommand(currentCommand);\r\n      if (output) {\r\n        newHistory.push({ type: 'output', text: output });\r\n      }\r\n\r\n      setCommandHistory(newHistory);\r\n      setCurrentCommand('');\r\n    } else if (e.key === 'ArrowUp') {\r\n      e.preventDefault();\r\n      if (bufferIndex < commandBuffer.length - 1) {\r\n        const newIndex = bufferIndex + 1;\r\n        setBufferIndex(newIndex);\r\n        setCurrentCommand(commandBuffer[newIndex]);\r\n      }\r\n    } else if (e.key === 'ArrowDown') {\r\n      e.preventDefault();\r\n      if (bufferIndex > 0) {\r\n        const newIndex = bufferIndex - 1;\r\n        setBufferIndex(newIndex);\r\n        setCurrentCommand(commandBuffer[newIndex]);\r\n      } else if (bufferIndex === 0) {\r\n        setBufferIndex(-1);\r\n        setCurrentCommand('');\r\n      }\r\n    } else if (e.ctrlKey) {\r\n      if (e.key === 'c') {\r\n        e.preventDefault();\r\n        setCurrentCommand('');\r\n        setCommandHistory(prev => [...prev, { type: 'input', text: '^C' }]);\r\n      } else if (e.key === 'l') {\r\n        e.preventDefault();\r\n        setCommandHistory([]);\r\n      }\r\n    } else if (e.key === 'Tab') {\r\n      e.preventDefault();\r\n      const parts = currentCommand.split(' ');\r\n      if (parts.length > 0) {\r\n        const lastPart = parts[parts.length - 1];\r\n        const dir = getDirectoryContents(currentPath);\r\n        if (dir) {\r\n          const matches = Object.keys(dir).filter(name => name.startsWith(lastPart));\r\n          if (matches.length === 1) {\r\n            parts[parts.length - 1] = matches[0];\r\n            setCurrentCommand(parts.join(' '));\r\n          } else if (matches.length > 1) {\r\n            // Show all possible completions\r\n            const newHistory = [...commandHistory, \r\n              { type: 'output', text: '\\nPossible completions:' },\r\n              { type: 'output', text: matches.map(m => \r\n                dir[m].type === 'dir' ? `\\x1b[34m${m}/\\x1b[0m` : m\r\n              ).join('  ') + '\\n' }\r\n            ];\r\n            setCommandHistory(newHistory);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div \r\n      style={{ \r\n        backgroundColor: '#1a1a1a',\r\n        color: '#fff',\r\n        fontFamily: 'monospace',\r\n        padding: '10px',\r\n        height: '100%',\r\n        borderRadius: '5px',\r\n        display: 'flex',\r\n        flexDirection: 'column'\r\n      }}\r\n      onClick={() => inputRef.current?.focus()}\r\n    >\r\n      <div \r\n        ref={terminalRef}\r\n        style={{ \r\n          flexGrow: 1,\r\n          overflowY: 'auto',\r\n          marginBottom: '10px'\r\n        }}\r\n      >\r\n        {commandHistory.map((entry, i) => (\r\n          <div \r\n            key={i} \r\n            style={{ \r\n              color: entry.type === 'error' ? '#ff4444' : \r\n                     entry.type === 'input' ? '#44ff44' : '#ffffff',\r\n              whiteSpace: 'pre-wrap',\r\n              marginBottom: '5px'\r\n            }}\r\n          >\r\n            {entry.text}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div style={{ display: 'flex', alignItems: 'center' }}>\r\n        <span style={{ color: '#44ff44' }}>{currentPath}$&nbsp;</span>\r\n        <input\r\n          ref={inputRef}\r\n          type=\"text\"\r\n          value={currentCommand}\r\n          onChange={(e) => setCurrentCommand(e.target.value)}\r\n          onKeyDown={handleKeyDown}\r\n          style={{\r\n            backgroundColor: 'transparent',\r\n            border: 'none',\r\n            color: '#ffffff',\r\n            fontFamily: 'monospace',\r\n            fontSize: 'inherit',\r\n            flexGrow: 1,\r\n            outline: 'none'\r\n          }}\r\n          autoFocus\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SimpleTerminal;\r\n"],"names":["SimpleTerminal","onCommand","commandHistory","setCommandHistory","useState","currentCommand","setCurrentCommand","currentPath","setCurrentPath","commandBuffer","setCommandBuffer","bufferIndex","setBufferIndex","inputRef","useRef","terminalRef","fileSystem","type","contents","content","useEffect","current","scrollTop","scrollHeight","getDirectoryContents","path","parts","split","filter","p","part","getCurrentDirectory","Object","entries","map","name","info","handleCommand","cmd","trim","command","toLowerCase","args","slice","flags","arg","startsWith","includes","parentPath","join","cleanPath","replace","Error","error","message","file","fullCommand","Date","toString","handleKeyDown","e","key","prev","preventDefault","newHistory","text","output","push","length","newIndex","ctrlKey","lastPart","dir","matches","keys","m","jsxs","style","backgroundColor","color","fontFamily","padding","height","borderRadius","display","flexDirection","onClick","focus","children","jsx","ref","flexGrow","overflowY","marginBottom","entry","i","whiteSpace","alignItems","value","onChange","target","onKeyDown","border","fontSize","outline","autoFocus"],"mappings":"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"}