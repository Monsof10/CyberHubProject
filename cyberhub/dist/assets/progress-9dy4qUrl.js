import{s as t}from"./index-Cw1DFOQ-.js";async function n(s){try{const{data:e,error:r}=await t.from("user_progress").select("*").eq("user_id",s).single();if(r&&r.code!=="PGRST116")throw r;return e}catch(e){throw console.error("Error fetching user progress:",e),e}}async function c(s,e){try{const{data:r,error:o}=await t.from("user_progress").insert([{user_id:s,progress:e}]).single();if(o)throw o;return r}catch(r){throw console.error("Error creating user progress:",r),r}}async function u(s,e){try{const{data:r,error:o}=await t.from("user_progress").update({progress:e}).eq("user_id",s).single();if(o)throw o;return r}catch(r){throw console.error("Error updating user progress:",r),r}}async function i(s){try{const{data:e,error:r}=await t.from("enrollments").select(`
        *,
        courses (*)
      `).eq("user_id",s);if(r)throw r;return e}catch(e){throw console.error("Error fetching user enrollments:",e),e}}async function g(s,e){try{const{data:r,error:o}=await t.from("course_progress").update({...e,last_accessed:new Date().toISOString()}).eq("id",s).single();if(o)throw o;return r}catch(r){throw console.error("Error updating course progress:",r),r}}export{i as a,g as b,c,n as g,u};
//# sourceMappingURL=progress-9dy4qUrl.js.map
