{"version":3,"file":"FinalQuiz-BwC1Z6w-.js","sources":["../../src/pages/Sql-Injection/FinalQuiz.jsx"],"sourcesContent":["import React, { useState, useContext } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { AuthContext } from '../../context/AuthContext';\r\nimport { getUserProgress, updateUserProgress, createUserProgress } from '../../supabase/progress';\r\nimport AttackPagesHeader from '../../components/AttackPagesHeader/AttackPagesHeader';\r\nimport ModuleProgressCircle from '../../components/ModuleProgressCircle';\r\n\r\nconst FinalQuiz = () => {\r\n  const { user } = useContext(AuthContext);\r\n  const [currentQuestion, setCurrentQuestion] = useState(0);\r\n  const [score, setScore] = useState(0);\r\n  const [showScore, setShowScore] = useState(false);\r\n  const [selectedAnswer, setSelectedAnswer] = useState(null);\r\n  const [isCorrect, setIsCorrect] = useState(null);\r\n  const [isSaving, setIsSaving] = useState(false);\r\n\r\n  // Module progress data\r\n  const moduleData = {\r\n    status: 'final_quiz_started',\r\n    component_progress: {\r\n      article: { completed: true, started: true },\r\n      initial_quiz: { completed: true, started: true },\r\n      labs: {\r\n        first: { completed: true, started: true },\r\n        second: { completed: true, started: true },\r\n        third: { completed: true, started: true }\r\n      },\r\n      final_quiz: { started: true, completed: false }\r\n    }\r\n  };\r\n\r\n    const questions = [\r\n      {\r\n        questionText: \"What is the main purpose of Out-of-Band techniques in SQL injection attacks?\",\r\n        answerOptions: [\r\n          { text: \"To exfiltrate data through indirect channels like DNS or HTTP requests\", isCorrect: true },\r\n          { text: \"To encrypt database traffic\", isCorrect: false },\r\n          { text: \"To delete database records\", isCorrect: false },\r\n          { text: \"To create new tables\", isCorrect: false },\r\n        ],\r\n      },\r\n    {\r\n      questionText: \"How does Error-based (Classic) SQL injection work?\",\r\n      answerOptions: [\r\n        { text: \"By causing random errors\", isCorrect: false },\r\n        { text: \"By exploiting error messages to extract data\", isCorrect: true },\r\n        { text: \"By crashing the database\", isCorrect: false },\r\n        { text: \"By modifying error logs\", isCorrect: false },\r\n      ],\r\n    },\r\n    {\r\n      questionText: \"What characterizes a blind SQL injection attack?\",\r\n      answerOptions: [\r\n        { text: \"Attacker can't see the database\", isCorrect: false },\r\n        { text: \"Database is offline\", isCorrect: false },\r\n        { text: \"No direct output of query results is visible\", isCorrect: true },\r\n        { text: \"All queries fail\", isCorrect: false },\r\n      ],\r\n    },\r\n    {\r\n      questionText: \"Which is an effective defense against SQL injection?\",\r\n      answerOptions: [\r\n        { text: \"Using parameterized queries\", isCorrect: true },\r\n        { text: \"Removing all user input\", isCorrect: false },\r\n        { text: \"Disabling the database\", isCorrect: false },\r\n        { text: \"Using plain text passwords\", isCorrect: false },\r\n      ],\r\n    },\r\n    {\r\n      questionText: \"What makes time-based blind SQL injection possible?\",\r\n      answerOptions: [\r\n        { text: \"Server response timing differences\", isCorrect: true },\r\n        { text: \"Database encryption\", isCorrect: false },\r\n        { text: \"Network latency\", isCorrect: false },\r\n        { text: \"User permissions\", isCorrect: false },\r\n      ],\r\n    },\r\n    {\r\n      questionText: \"Which practice helps prevent SQL injection attacks?\",\r\n      answerOptions: [\r\n        { text: \"Input validation and sanitization\", isCorrect: true },\r\n        { text: \"Storing passwords in plain text\", isCorrect: false },\r\n        { text: \"Disabling database security\", isCorrect: false },\r\n        { text: \"Using default credentials\", isCorrect: false },\r\n      ],\r\n    },\r\n    {\r\n      questionText: \"What is the purpose of the ORDER BY clause in SQL injection?\",\r\n      answerOptions: [\r\n        { text: \"To determine number of columns in result set\", isCorrect: true },\r\n        { text: \"To encrypt data\", isCorrect: false },\r\n        { text: \"To delete records\", isCorrect: false },\r\n        { text: \"To create users\", isCorrect: false },\r\n      ],\r\n    },\r\n    {\r\n      questionText: \"How can WAF (Web Application Firewall) prevent SQL injection?\",\r\n      answerOptions: [\r\n        { text: \"By filtering malicious SQL patterns\", isCorrect: true },\r\n        { text: \"By slowing down the database\", isCorrect: false },\r\n        { text: \"By encrypting all data\", isCorrect: false },\r\n        { text: \"By blocking all traffic\", isCorrect: false },\r\n      ],\r\n    },\r\n    {\r\n      questionText: \"What role does input escaping play in preventing SQL injection?\",\r\n      answerOptions: [\r\n        { text: \"Neutralizing special characters in user input\", isCorrect: true },\r\n        { text: \"Blocking all user input\", isCorrect: false },\r\n        { text: \"Encrypting the database\", isCorrect: false },\r\n        { text: \"Disabling SQL queries\", isCorrect: false },\r\n      ],\r\n    },\r\n    {\r\n      questionText: \"Which database feature can help prevent SQL injection?\",\r\n      answerOptions: [\r\n        { text: \"Stored procedures with proper parameters\", isCorrect: true },\r\n        { text: \"Disabling all security\", isCorrect: false },\r\n        { text: \"Using plain text storage\", isCorrect: false },\r\n        { text: \"Removing user authentication\", isCorrect: false },\r\n      ],\r\n    },\r\n    {\r\n      questionText: \"What makes second-order SQL injection different?\",\r\n      answerOptions: [\r\n        { text: \"It uses stored malicious data from a previous operation\", isCorrect: true },\r\n        { text: \"It only works on secondary servers\", isCorrect: false },\r\n        { text: \"It requires two databases\", isCorrect: false },\r\n        { text: \"It needs two users\", isCorrect: false },\r\n      ],\r\n    },\r\n    {\r\n      questionText: \"How does ORM (Object-Relational Mapping) help prevent SQL injection?\",\r\n      answerOptions: [\r\n        { text: \"By automatically handling query parameterization\", isCorrect: true },\r\n        { text: \"By removing database access\", isCorrect: false },\r\n        { text: \"By encrypting all queries\", isCorrect: false },\r\n        { text: \"By limiting database size\", isCorrect: false },\r\n      ],\r\n    },\r\n    {\r\n      questionText: \"Which command is used to test for SQL injection vulnerabilities using sqlmap?\",\r\n      answerOptions: [\r\n        { text: \"sqlmap -u http://example.com/vulnerable.php?id=1 --batch\", isCorrect: true },\r\n        { text: \"nmap -sS 192.168.1.1\", isCorrect: false },\r\n        { text: \"ping 192.168.1.1\", isCorrect: false },\r\n        { text: \"curl http://example.com\", isCorrect: false },\r\n      ],\r\n    },\r\n    {\r\n      questionText: \"What sqlmap option is used to enumerate databases?\",\r\n      answerOptions: [\r\n        { text: \"--dbs\", isCorrect: true },\r\n        { text: \"--tables\", isCorrect: false },\r\n        { text: \"--columns\", isCorrect: false },\r\n        { text: \"--dump\", isCorrect: false },\r\n      ],\r\n    },\r\n    {\r\n      questionText: \"Which sqlmap command dumps the contents of a specific table?\",\r\n      answerOptions: [\r\n        { text: \"sqlmap -u http://example.com/vulnerable.php?id=1 --dump -T users\", isCorrect: true },\r\n        { text: \"sqlmap -u http://example.com/vulnerable.php?id=1 --dbs\", isCorrect: false },\r\n        { text: \"sqlmap -u http://example.com/vulnerable.php?id=1 --tables\", isCorrect: false },\r\n        { text: \"sqlmap -u http://example.com/vulnerable.php?id=1 --columns\", isCorrect: false },\r\n      ],\r\n    },\r\n  ];\r\n\r\n  const handleAnswerClick = (isCorrect, index) => {\r\n    setSelectedAnswer(index);\r\n    setIsCorrect(isCorrect);\r\n    \r\n    if (isCorrect) {\r\n      setScore(score + 1);\r\n    }\r\n    \r\n    setTimeout(() => {\r\n      if (currentQuestion < questions.length - 1) {\r\n        setCurrentQuestion(currentQuestion + 1);\r\n      } else {\r\n        setShowScore(true);\r\n      }\r\n      setSelectedAnswer(null);\r\n      setIsCorrect(null);\r\n    }, 1000);\r\n  };\r\n\r\n  const calculatePercentage = () => {\r\n    return Math.round((score / questions.length) * 100);\r\n  };\r\n\r\n  const saveProgress = async () => {\r\n    if (!user) return;\r\n    \r\n    setIsSaving(true);\r\n    try {\r\n      // Get existing progress\r\n      const existingProgress = await getUserProgress(user.id);\r\n      \r\n      const newProgress = {\r\n        ...existingProgress?.progress,\r\n        sqlInjection: {\r\n          ...existingProgress?.progress?.sqlInjection,\r\n          finalQuiz: {\r\n            completed: true,\r\n            score: score,\r\n            totalQuestions: questions.length,\r\n            percentage: calculatePercentage(),\r\n            completedAt: new Date().toISOString()\r\n          },\r\n          // Mark level 1 modules as completed to reflect 20% course completion\r\n          level1_article: { completed: true, completedAt: new Date().toISOString() },\r\n          level1_initial_quiz: { completed: true, completedAt: new Date().toISOString() },\r\n          level1_labs_first: { completed: true, completedAt: new Date().toISOString() },\r\n          level1_final_quiz: { completed: true, completedAt: new Date().toISOString() }\r\n        }\r\n      };\r\n\r\n      if (existingProgress) {\r\n        await updateUserProgress(user.id, newProgress);\r\n      } else {\r\n        await createUserProgress(user.id, newProgress);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error saving progress:', error);\r\n    } finally {\r\n      setIsSaving(false);\r\n    }\r\n  };\r\n\r\n  const getScoreMessage = () => {\r\n    const percentage = calculatePercentage();\r\n    if (percentage >= 80) {\r\n      return \"Excellent! You have mastered SQL injection concepts and protections!\";\r\n    } else if (percentage >= 60) {\r\n      return \"Good job! You understand most concepts but might want to review some topics.\";\r\n    } else {\r\n      return \"You might want to review the material and labs before proceeding.\";\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{\r\n      backgroundColor: '#151B3B',\r\n      minHeight: '100vh',\r\n      display: 'flex',\r\n      flexDirection: 'column'\r\n    }}>\r\n      <div style={{ position: 'relative' }}>\r\n        <AttackPagesHeader pageType=\"sql\" />\r\n        {user && (\r\n          <div style={{\r\n            position: 'absolute',\r\n            top: '20px',\r\n            right: '20px',\r\n            zIndex: 1000\r\n          }}>\r\n            <ModuleProgressCircle \r\n              module={moduleData}\r\n              size=\"small\"\r\n            />\r\n          </div>\r\n        )}\r\n      </div>\r\n      <div style={{\r\n        flex: 1,\r\n        color: '#fff',\r\n        padding: '40px',\r\n        fontFamily: 'Georgia, serif'\r\n      }}>\r\n        <div style={{\r\n          maxWidth: '800px',\r\n          margin: '0 auto',\r\n          backgroundColor: '#1a2147',\r\n          padding: '30px',\r\n          borderRadius: '10px',\r\n          boxShadow: '0 0 20px rgba(0,0,0,0.3)'\r\n        }}>\r\n          {showScore ? (\r\n            <div style={{ textAlign: 'center' }}>\r\n              <h2 style={{ color: '#5DADE2', marginBottom: '20px' }}>Final Quiz Complete!</h2>\r\n              <div style={{ \r\n                fontSize: '24px', \r\n                marginBottom: '20px',\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n                gap: '10px',\r\n                alignItems: 'center'\r\n              }}>\r\n                <p>You scored {score} out of {questions.length}</p>\r\n                <p style={{ color: '#F1C40F' }}>\r\n                  Percentage: {calculatePercentage()}%\r\n                </p>\r\n              </div>\r\n              <p style={{ fontSize: '18px', marginBottom: '30px', color: '#F1C40F' }}>\r\n                {getScoreMessage()}\r\n              </p>\r\n              <div style={{ display: 'flex', flexDirection: 'column', gap: '20px' }}>\r\n                {isSaving && (\r\n                  <p style={{ color: '#5DADE2', textAlign: 'center' }}>Saving your progress...</p>\r\n                )}\r\n                <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                  <button\r\n                    onClick={() => {\r\n                      setShowScore(false);\r\n                      setCurrentQuestion(0);\r\n                      setScore(0);\r\n                    }}\r\n                    style={{\r\n                      backgroundColor: '#5DADE2',\r\n                      color: '#fff',\r\n                      padding: '10px 20px',\r\n                      borderRadius: '5px',\r\n                      border: 'none',\r\n                      cursor: 'pointer',\r\n                      display: 'flex',\r\n                      alignItems: 'center',\r\n                      gap: '10px'\r\n                    }}\r\n                  >\r\n                    <span style={{ fontSize: '20px' }}>←</span>\r\n                    Retake Quiz\r\n                  </button>\r\n                  <Link\r\n                    to=\"/Sql-Injection/HomePage\"\r\n                    style={{\r\n                      backgroundColor: '#F1C40F',\r\n                      color: '#000',\r\n                      padding: '10px 20px',\r\n                      borderRadius: '5px',\r\n                      textDecoration: 'none'\r\n                    }}\r\n                    onClick={saveProgress}\r\n                  >\r\n                    Complete Level 1 \r\n                  </Link>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <>\r\n              <div style={{ marginBottom: '20px' }}>\r\n                <h3 style={{ color: '#5DADE2', marginBottom: '10px' }}>\r\n                  Question {currentQuestion + 1}/{questions.length}\r\n                </h3>\r\n                <div style={{ \r\n                  height: '10px', \r\n                  backgroundColor: '#2C3E50',\r\n                  borderRadius: '5px',\r\n                  overflow: 'hidden'\r\n                }}>\r\n                  <div style={{\r\n                    width: `${((currentQuestion + 1) / questions.length) * 100}%`,\r\n                    height: '100%',\r\n                    backgroundColor: '#5DADE2',\r\n                    transition: 'width 0.3s ease'\r\n                  }} />\r\n                </div>\r\n              </div>\r\n\r\n              <div style={{ marginBottom: '30px' }}>\r\n                <h2 style={{ color: '#F1C40F', marginBottom: '20px' }}>\r\n                  {questions[currentQuestion].questionText}\r\n                </h2>\r\n                <div style={{ display: 'flex', flexDirection: 'column', gap: '10px' }}>\r\n                  {questions[currentQuestion].answerOptions.map((option, index) => (\r\n                    <button\r\n                      key={index}\r\n                      onClick={() => handleAnswerClick(option.isCorrect, index)}\r\n                      disabled={selectedAnswer !== null}\r\n                      style={{\r\n                        backgroundColor: selectedAnswer === index \r\n                          ? (isCorrect ? '#2ecc71' : '#e74c3c') \r\n                          : '#2C3E50',\r\n                        border: 'none',\r\n                        padding: '15px',\r\n                        borderRadius: '5px',\r\n                        color: '#fff',\r\n                        cursor: selectedAnswer === null ? 'pointer' : 'default',\r\n                        textAlign: 'left',\r\n                        transition: 'all 0.3s',\r\n                        transform: selectedAnswer === index ? 'scale(1.02)' : 'scale(1)',\r\n                        boxShadow: selectedAnswer === index ? '0 4px 8px rgba(0,0,0,0.2)' : 'none'\r\n                      }}\r\n                    >\r\n                      <div style={{ display: 'flex', alignItems: 'center', gap: '10px' }}>\r\n                        <span style={{ \r\n                          width: '25px',\r\n                          height: '25px',\r\n                          borderRadius: '50%',\r\n                          backgroundColor: '#5DADE2',\r\n                          display: 'flex',\r\n                          alignItems: 'center',\r\n                          justifyContent: 'center',\r\n                          fontSize: '14px',\r\n                          fontWeight: 'bold'\r\n                        }}>\r\n                          {String.fromCharCode(65 + index)}\r\n                        </span>\r\n                        {option.text}\r\n                      </div>\r\n                    </button>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n\r\n              {/* Question Navigation Dots */}\r\n              <div style={{ \r\n                display: 'flex', \r\n                justifyContent: 'center',\r\n                gap: '10px',\r\n                marginTop: '30px'\r\n              }}>\r\n                {questions.map((_, index) => (\r\n                  <button\r\n                    key={index}\r\n                    onClick={() => setCurrentQuestion(index)}\r\n                    style={{\r\n                      width: '12px',\r\n                      height: '12px',\r\n                      borderRadius: '50%',\r\n                      backgroundColor: currentQuestion === index ? '#F1C40F' : '#2C3E50',\r\n                      border: 'none',\r\n                      cursor: 'pointer',\r\n                      transition: 'all 0.3s'\r\n                    }}\r\n                    onMouseEnter={(e) => {\r\n                      if (currentQuestion !== index) {\r\n                        e.currentTarget.style.backgroundColor = '#34495E';\r\n                      }\r\n                    }}\r\n                    onMouseLeave={(e) => {\r\n                      if (currentQuestion !== index) {\r\n                        e.currentTarget.style.backgroundColor = '#2C3E50';\r\n                      }\r\n                    }}\r\n                  />\r\n                ))}\r\n              </div>\r\n            </>\r\n          )}\r\n        </div>\r\n        {/* Bottom navigation */}\r\n        <div style={{\r\n          maxWidth: '800px',\r\n          margin: '20px auto 0',\r\n          display: 'flex',\r\n          justifyContent: 'space-between'\r\n        }}>\r\n          <div style={{ display: 'flex', gap: '10px' }}>\r\n            <Link\r\n              to=\"/\"\r\n              style={{\r\n                backgroundColor: '#5DADE2',\r\n                color: '#fff',\r\n                padding: '10px 20px',\r\n                borderRadius: '5px',\r\n                textDecoration: 'none',\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                gap: '10px'\r\n              }}\r\n            >\r\n              <span style={{ fontSize: '20px' }}>🏠</span>\r\n              Home\r\n            </Link>\r\n            <Link\r\n              to=\"/Sql-Injection/AttackPages/BlindSqlInjection\"\r\n              style={{\r\n                backgroundColor: '#34495E',\r\n                color: '#fff',\r\n                padding: '10px 20px',\r\n                borderRadius: '5px',\r\n                textDecoration: 'none',\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                gap: '10px'\r\n              }}\r\n            >\r\n              <span style={{ fontSize: '20px' }}>←</span>\r\n              Return to Blind SQL Injection\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FinalQuiz;\r\n"],"names":["FinalQuiz","user","useContext","AuthContext","currentQuestion","setCurrentQuestion","useState","score","setScore","showScore","setShowScore","selectedAnswer","setSelectedAnswer","isCorrect","setIsCorrect","isSaving","setIsSaving","moduleData","status","component_progress","article","completed","started","initial_quiz","labs","first","second","third","final_quiz","questions","questionText","answerOptions","text","handleAnswerClick","index","setTimeout","length","calculatePercentage","Math","round","saveProgress","existingProgress","getUserProgress","id","newProgress","progress","sqlInjection","finalQuiz","totalQuestions","percentage","completedAt","Date","toISOString","level1_article","level1_initial_quiz","level1_labs_first","level1_final_quiz","updateUserProgress","createUserProgress","error","console","getScoreMessage","jsxs","style","backgroundColor","minHeight","display","flexDirection","children","position","jsx","AttackPagesHeader","pageType","top","right","zIndex","ModuleProgressCircle","module","size","flex","color","padding","fontFamily","maxWidth","margin","borderRadius","boxShadow","textAlign","marginBottom","fontSize","gap","alignItems","justifyContent","onClick","border","cursor","Link","to","textDecoration","Fragment","height","overflow","width","transition","map","option","disabled","transform","fontWeight","String","fromCharCode","marginTop","_","onMouseEnter","e","currentTarget","onMouseLeave"],"mappings":"kRAOMA,MAAAA,EAAYA,IAAM,CACtB,KAAM,CAAEC,KAAAA,CAAK,EAAIC,EAAAA,WAAWC,CAAW,EACjC,CAACC,EAAiBC,CAAkB,EAAIC,EAAAA,SAAS,CAAC,EAClD,CAACC,EAAOC,CAAQ,EAAIF,EAAAA,SAAS,CAAC,EAC9B,CAACG,EAAWC,CAAY,EAAIJ,EAAAA,SAAS,EAAK,EAC1C,CAACK,EAAgBC,CAAiB,EAAIN,EAAAA,SAAS,IAAI,EACnD,CAACO,EAAWC,CAAY,EAAIR,EAAAA,SAAS,IAAI,EACzC,CAACS,EAAUC,CAAW,EAAIV,EAAAA,SAAS,EAAK,EAGxCW,EAAa,CACjBC,OAAQ,qBACRC,mBAAoB,CAClBC,QAAS,CAAEC,UAAW,GAAMC,QAAS,EAAK,EAC1CC,aAAc,CAAEF,UAAW,GAAMC,QAAS,EAAK,EAC/CE,KAAM,CACJC,MAAO,CAAEJ,UAAW,GAAMC,QAAS,EAAK,EACxCI,OAAQ,CAAEL,UAAW,GAAMC,QAAS,EAAK,EACzCK,MAAO,CAAEN,UAAW,GAAMC,QAAS,EAAK,CAC1C,EACAM,WAAY,CAAEN,QAAS,GAAMD,UAAW,EAAM,CAChD,CACF,EAEQQ,EAAY,CAChB,CACEC,aAAc,+EACdC,cAAe,CACb,CAAEC,KAAM,yEAA0EnB,UAAW,EAAK,EAClG,CAAEmB,KAAM,8BAA+BnB,UAAW,EAAM,EACxD,CAAEmB,KAAM,6BAA8BnB,UAAW,EAAM,EACvD,CAAEmB,KAAM,uBAAwBnB,UAAW,EAAM,CAAA,CAErD,EACF,CACEiB,aAAc,qDACdC,cAAe,CACb,CAAEC,KAAM,2BAA4BnB,UAAW,EAAM,EACrD,CAAEmB,KAAM,+CAAgDnB,UAAW,EAAK,EACxE,CAAEmB,KAAM,2BAA4BnB,UAAW,EAAM,EACrD,CAAEmB,KAAM,0BAA2BnB,UAAW,EAAM,CAAA,CAExD,EACA,CACEiB,aAAc,mDACdC,cAAe,CACb,CAAEC,KAAM,kCAAmCnB,UAAW,EAAM,EAC5D,CAAEmB,KAAM,sBAAuBnB,UAAW,EAAM,EAChD,CAAEmB,KAAM,+CAAgDnB,UAAW,EAAK,EACxE,CAAEmB,KAAM,mBAAoBnB,UAAW,EAAM,CAAA,CAEjD,EACA,CACEiB,aAAc,uDACdC,cAAe,CACb,CAAEC,KAAM,8BAA+BnB,UAAW,EAAK,EACvD,CAAEmB,KAAM,0BAA2BnB,UAAW,EAAM,EACpD,CAAEmB,KAAM,yBAA0BnB,UAAW,EAAM,EACnD,CAAEmB,KAAM,6BAA8BnB,UAAW,EAAM,CAAA,CAE3D,EACA,CACEiB,aAAc,sDACdC,cAAe,CACb,CAAEC,KAAM,qCAAsCnB,UAAW,EAAK,EAC9D,CAAEmB,KAAM,sBAAuBnB,UAAW,EAAM,EAChD,CAAEmB,KAAM,kBAAmBnB,UAAW,EAAM,EAC5C,CAAEmB,KAAM,mBAAoBnB,UAAW,EAAM,CAAA,CAEjD,EACA,CACEiB,aAAc,sDACdC,cAAe,CACb,CAAEC,KAAM,oCAAqCnB,UAAW,EAAK,EAC7D,CAAEmB,KAAM,kCAAmCnB,UAAW,EAAM,EAC5D,CAAEmB,KAAM,8BAA+BnB,UAAW,EAAM,EACxD,CAAEmB,KAAM,4BAA6BnB,UAAW,EAAM,CAAA,CAE1D,EACA,CACEiB,aAAc,+DACdC,cAAe,CACb,CAAEC,KAAM,+CAAgDnB,UAAW,EAAK,EACxE,CAAEmB,KAAM,kBAAmBnB,UAAW,EAAM,EAC5C,CAAEmB,KAAM,oBAAqBnB,UAAW,EAAM,EAC9C,CAAEmB,KAAM,kBAAmBnB,UAAW,EAAM,CAAA,CAEhD,EACA,CACEiB,aAAc,gEACdC,cAAe,CACb,CAAEC,KAAM,sCAAuCnB,UAAW,EAAK,EAC/D,CAAEmB,KAAM,+BAAgCnB,UAAW,EAAM,EACzD,CAAEmB,KAAM,yBAA0BnB,UAAW,EAAM,EACnD,CAAEmB,KAAM,0BAA2BnB,UAAW,EAAM,CAAA,CAExD,EACA,CACEiB,aAAc,kEACdC,cAAe,CACb,CAAEC,KAAM,gDAAiDnB,UAAW,EAAK,EACzE,CAAEmB,KAAM,0BAA2BnB,UAAW,EAAM,EACpD,CAAEmB,KAAM,0BAA2BnB,UAAW,EAAM,EACpD,CAAEmB,KAAM,wBAAyBnB,UAAW,EAAM,CAAA,CAEtD,EACA,CACEiB,aAAc,yDACdC,cAAe,CACb,CAAEC,KAAM,2CAA4CnB,UAAW,EAAK,EACpE,CAAEmB,KAAM,yBAA0BnB,UAAW,EAAM,EACnD,CAAEmB,KAAM,2BAA4BnB,UAAW,EAAM,EACrD,CAAEmB,KAAM,+BAAgCnB,UAAW,EAAM,CAAA,CAE7D,EACA,CACEiB,aAAc,mDACdC,cAAe,CACb,CAAEC,KAAM,0DAA2DnB,UAAW,EAAK,EACnF,CAAEmB,KAAM,qCAAsCnB,UAAW,EAAM,EAC/D,CAAEmB,KAAM,4BAA6BnB,UAAW,EAAM,EACtD,CAAEmB,KAAM,qBAAsBnB,UAAW,EAAM,CAAA,CAEnD,EACA,CACEiB,aAAc,uEACdC,cAAe,CACb,CAAEC,KAAM,mDAAoDnB,UAAW,EAAK,EAC5E,CAAEmB,KAAM,8BAA+BnB,UAAW,EAAM,EACxD,CAAEmB,KAAM,4BAA6BnB,UAAW,EAAM,EACtD,CAAEmB,KAAM,4BAA6BnB,UAAW,EAAM,CAAA,CAE1D,EACA,CACEiB,aAAc,gFACdC,cAAe,CACb,CAAEC,KAAM,2DAA4DnB,UAAW,EAAK,EACpF,CAAEmB,KAAM,uBAAwBnB,UAAW,EAAM,EACjD,CAAEmB,KAAM,mBAAoBnB,UAAW,EAAM,EAC7C,CAAEmB,KAAM,0BAA2BnB,UAAW,EAAM,CAAA,CAExD,EACA,CACEiB,aAAc,qDACdC,cAAe,CACb,CAAEC,KAAM,QAASnB,UAAW,EAAK,EACjC,CAAEmB,KAAM,WAAYnB,UAAW,EAAM,EACrC,CAAEmB,KAAM,YAAanB,UAAW,EAAM,EACtC,CAAEmB,KAAM,SAAUnB,UAAW,EAAM,CAAA,CAEvC,EACA,CACEiB,aAAc,+DACdC,cAAe,CACb,CAAEC,KAAM,mEAAoEnB,UAAW,EAAK,EAC5F,CAAEmB,KAAM,yDAA0DnB,UAAW,EAAM,EACnF,CAAEmB,KAAM,4DAA6DnB,UAAW,EAAM,EACtF,CAAEmB,KAAM,6DAA8DnB,UAAW,EAAM,CAAA,CAE3F,CAAA,EAGIoB,EAAoBA,CAACpB,EAAWqB,IAAU,CAC9CtB,EAAkBsB,CAAK,EACvBpB,EAAaD,CAAS,EAElBA,GACFL,EAASD,EAAQ,CAAC,EAGpB4B,WAAW,IAAM,CACX/B,EAAkByB,EAAUO,OAAS,EACvC/B,EAAmBD,EAAkB,CAAC,EAEtCM,EAAa,EAAI,EAEnBE,EAAkB,IAAI,EACtBE,EAAa,IAAI,GAChB,GAAI,CACT,EAEMuB,EAAsBA,IACnBC,KAAKC,MAAOhC,EAAQsB,EAAUO,OAAU,GAAG,EAG9CI,EAAe,SAAY,OAC/B,GAAKvC,EAELe,CAAAA,EAAY,EAAI,EACZ,GAAA,CAEF,MAAMyB,EAAmB,MAAMC,EAAgBzC,EAAK0C,EAAE,EAEhDC,EAAc,CAClB,GAAGH,GAAAA,YAAAA,EAAkBI,SACrBC,aAAc,CACZ,IAAGL,EAAAA,GAAAA,YAAAA,EAAkBI,WAAlBJ,YAAAA,EAA4BK,aAC/BC,UAAW,CACT1B,UAAW,GACXd,MAAAA,EACAyC,eAAgBnB,EAAUO,OAC1Ba,WAAYZ,EAAoB,EAChCa,YAAa,IAAIC,KAAK,EAAEC,YAAY,CACtC,EAEAC,eAAgB,CAAEhC,UAAW,GAAM6B,YAAiB,IAAAC,KAAA,EAAOC,YAAA,CAAc,EACzEE,oBAAqB,CAAEjC,UAAW,GAAM6B,YAAiB,IAAAC,KAAA,EAAOC,YAAA,CAAc,EAC9EG,kBAAmB,CAAElC,UAAW,GAAM6B,YAAiB,IAAAC,KAAA,EAAOC,YAAA,CAAc,EAC5EI,kBAAmB,CAAEnC,UAAW,GAAM6B,YAAiB,IAAAC,KAAA,EAAOC,YAAA,CAAc,CAC9E,CACF,EAEIX,EACI,MAAAgB,EAAmBxD,EAAK0C,GAAIC,CAAW,EAEvC,MAAAc,EAAmBzD,EAAK0C,GAAIC,CAAW,QAExCe,EAAO,CACNC,QAAAD,MAAM,yBAA0BA,CAAK,CAC/C,QAAE,CACA3C,EAAY,EAAK,CACnB,EACF,EAEM6C,EAAkBA,IAAM,CAC5B,MAAMZ,EAAaZ,EAAoB,EACvC,OAAIY,GAAc,GACT,uEACEA,GAAc,GAChB,+EAEA,mEAEX,EAGE,OAAAa,EAAAA,KAAC,OAAIC,MAAO,CACVC,gBAAiB,UACjBC,UAAW,QACXC,QAAS,OACTC,cAAe,QAEf,EAAAC,SAAA,CAAAN,EAAA,KAAC,MAAI,CAAAC,MAAO,CAAEM,SAAU,UACtB,EAAAD,SAAA,CAACE,EAAA,IAAAC,EAAA,CAAkBC,SAAS,MAAM,EACjCvE,GACEqE,EAAA,IAAA,MAAA,CAAIP,MAAO,CACVM,SAAU,WACVI,IAAK,OACLC,MAAO,OACPC,OAAQ,GAER,EAAAP,SAAAE,EAAA,IAACM,EAAA,CACCC,OAAQ5D,EACR6D,KAAK,OACP,CAAA,CACF,CAAA,CAAA,CAEJ,CAAA,EACAhB,EAAA,KAAC,OAAIC,MAAO,CACVgB,KAAM,EACNC,MAAO,OACPC,QAAS,OACTC,WAAY,gBAEZ,EAAAd,SAAA,CAAAE,EAAA,IAAC,OAAIP,MAAO,CACVoB,SAAU,QACVC,OAAQ,SACRpB,gBAAiB,UACjBiB,QAAS,OACTI,aAAc,OACdC,UAAW,0BACb,EACGlB,WACEN,EAAA,KAAA,MAAA,CAAIC,MAAO,CAAEwB,UAAW,QACvB,EAAAnB,SAAA,CAACE,EAAA,IAAA,KAAA,CAAGP,MAAO,CAAEiB,MAAO,UAAWQ,aAAc,QAAUpB,SAAoB,sBAAA,CAAA,EAC3EN,EAAA,KAAC,OAAIC,MAAO,CACV0B,SAAU,OACVD,aAAc,OACdtB,QAAS,OACTC,cAAe,SACfuB,IAAK,OACLC,WAAY,QAEZ,EAAAvB,SAAA,CAAAN,EAAA,KAAC,IAAE,CAAAM,SAAA,CAAA,cAAY7D,EAAM,WAASsB,EAAUO,MAAA,CAAO,CAAA,SAC9C,IAAE,CAAA2B,MAAO,CAAEiB,MAAO,SAAa,EAAAZ,SAAA,CAAA,eACjB/B,EAAoB,EAAE,GAAA,CACrC,CAAA,CAAA,CACF,CAAA,EACCiC,EAAA,IAAA,IAAA,CAAEP,MAAO,CAAE0B,SAAU,OAAQD,aAAc,OAAQR,MAAO,SACxD,EAAAZ,SAAAP,EAAA,CACH,CAAA,EACAC,EAAA,KAAC,MAAI,CAAAC,MAAO,CAAEG,QAAS,OAAQC,cAAe,SAAUuB,IAAK,MAC1D,EAAAtB,SAAA,CACCrD,GAAAuD,EAAA,IAAC,KAAEP,MAAO,CAAEiB,MAAO,UAAWO,UAAW,QAAS,EAAGnB,SAAuB,yBAAA,CAAA,EAE9EN,EAAA,KAAC,OAAIC,MAAO,CAAEG,QAAS,OAAQ0B,eAAgB,eAC7C,EAAAxB,SAAA,CAAAN,EAAA,KAAC,SAAA,CACC+B,QAASA,IAAM,CACbnF,EAAa,EAAK,EAClBL,EAAmB,CAAC,EACpBG,EAAS,CAAC,CACZ,EACAuD,MAAO,CACLC,gBAAiB,UACjBgB,MAAO,OACPC,QAAS,YACTI,aAAc,MACdS,OAAQ,OACRC,OAAQ,UACR7B,QAAS,OACTyB,WAAY,SACZD,IAAK,MACP,EAEAtB,SAAA,CAAAE,EAAA,IAAC,QAAKP,MAAO,CAAE0B,SAAU,QAAUrB,SAAC,GAAA,CAAA,EAAO,aAAA,CAAA,CAE7C,EACAE,EAAA,IAAC0B,EAAA,CACCC,GAAG,0BACHlC,MAAO,CACLC,gBAAiB,UACjBgB,MAAO,OACPC,QAAS,YACTI,aAAc,MACda,eAAgB,MAClB,EACAL,QAASrD,EACV4B,SAAA,kBAAA,CAED,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CAAA,CACF,EAGEN,EAAA,KAAAqC,WAAA,CAAA/B,SAAA,CAAAN,EAAA,KAAC,MAAI,CAAAC,MAAO,CAAEyB,aAAc,MAC1B,EAAApB,SAAA,CAAAN,EAAA,KAAC,MAAGC,MAAO,CAAEiB,MAAO,UAAWQ,aAAc,MAAU,EAAApB,SAAA,CAAA,YAC3ChE,EAAkB,EAAE,IAAEyB,EAAUO,MAAA,CAC5C,CAAA,EACAkC,EAAA,IAAC,OAAIP,MAAO,CACVqC,OAAQ,OACRpC,gBAAiB,UACjBqB,aAAc,MACdgB,SAAU,QACZ,EACEjC,SAACE,EAAA,IAAA,MAAA,CAAIP,MAAO,CACVuC,MAAY,IAAAlG,EAAkB,GAAKyB,EAAUO,OAAU,GAAG,IAC1DgE,OAAQ,OACRpC,gBAAiB,UACjBuC,WAAY,iBACd,CAAG,CAAA,CACL,CAAA,CAAA,CACF,CAAA,SAEC,MAAI,CAAAxC,MAAO,CAAEyB,aAAc,MAC1B,EAAApB,SAAA,CAACE,EAAA,IAAA,KAAA,CAAGP,MAAO,CAAEiB,MAAO,UAAWQ,aAAc,MAC1C,EAAApB,SAAAvC,EAAUzB,CAAe,EAAE0B,YAC9B,CAAA,QACC,MAAI,CAAAiC,MAAO,CAAEG,QAAS,OAAQC,cAAe,SAAUuB,IAAK,MAAO,EACjEtB,WAAUhE,CAAe,EAAE2B,cAAcyE,IAAI,CAACC,EAAQvE,IACrDoC,EAAA,IAAC,SAAA,CAECuB,QAASA,IAAM5D,EAAkBwE,EAAO5F,UAAWqB,CAAK,EACxDwE,SAAU/F,IAAmB,KAC7BoD,MAAO,CACLC,gBAAiBrD,IAAmBuB,EAC/BrB,EAAY,UAAY,UACzB,UACJiF,OAAQ,OACRb,QAAS,OACTI,aAAc,MACdL,MAAO,OACPe,OAAQpF,IAAmB,KAAO,UAAY,UAC9C4E,UAAW,OACXgB,WAAY,WACZI,UAAWhG,IAAmBuB,EAAQ,cAAgB,WACtDoD,UAAW3E,IAAmBuB,EAAQ,4BAA8B,MACtE,EAEAkC,SAAAN,EAAA,KAAC,MAAI,CAAAC,MAAO,CAAEG,QAAS,OAAQyB,WAAY,SAAUD,IAAK,MACxD,EAAAtB,SAAA,CAAAE,EAAA,IAAC,QAAKP,MAAO,CACXuC,MAAO,OACPF,OAAQ,OACRf,aAAc,MACdrB,gBAAiB,UACjBE,QAAS,OACTyB,WAAY,SACZC,eAAgB,SAChBH,SAAU,OACVmB,WAAY,MAEX,EAAAxC,SAAAyC,OAAOC,aAAa,GAAK5E,CAAK,CACjC,CAAA,EACCuE,EAAOzE,IAAA,CACV,CAAA,CAAA,EAjCKE,CAkCP,CACD,CACH,CAAA,CAAA,CACF,CAAA,EAGAoC,EAAA,IAAC,OAAIP,MAAO,CACVG,QAAS,OACT0B,eAAgB,SAChBF,IAAK,OACLqB,UAAW,MAEV,EAAA3C,SAAAvC,EAAU2E,IAAI,CAACQ,EAAG9E,IACjBoC,EAAA,IAAC,SAAA,CAECuB,QAASA,IAAMxF,EAAmB6B,CAAK,EACvC6B,MAAO,CACLuC,MAAO,OACPF,OAAQ,OACRf,aAAc,MACdrB,gBAAiB5D,IAAoB8B,EAAQ,UAAY,UACzD4D,OAAQ,OACRC,OAAQ,UACRQ,WAAY,UACd,EACAU,aAAeC,GAAM,CACf9G,IAAoB8B,IACpBgF,EAAAC,cAAcpD,MAAMC,gBAAkB,UAE5C,EACAoD,aAAeF,GAAM,CACf9G,IAAoB8B,IACpBgF,EAAAC,cAAcpD,MAAMC,gBAAkB,UAE5C,CAAA,EApBK9B,CAqBP,CACD,CACH,CAAA,CAAA,CACF,CAAA,CAEJ,CAAA,EAEAoC,EAAA,IAAC,OAAIP,MAAO,CACVoB,SAAU,QACVC,OAAQ,cACRlB,QAAS,OACT0B,eAAgB,eAClB,EACExB,gBAAC,MAAI,CAAAL,MAAO,CAAEG,QAAS,OAAQwB,IAAK,MAClC,EAAAtB,SAAA,CAAAN,EAAA,KAACkC,EAAA,CACCC,GAAG,IACHlC,MAAO,CACLC,gBAAiB,UACjBgB,MAAO,OACPC,QAAS,YACTI,aAAc,MACda,eAAgB,OAChBhC,QAAS,OACTyB,WAAY,SACZD,IAAK,MACP,EAEAtB,SAAA,CAAAE,EAAA,IAAC,QAAKP,MAAO,CAAE0B,SAAU,QAAUrB,SAAE,IAAA,CAAA,EAAO,MAAA,CAAA,CAE9C,EACAN,EAAA,KAACkC,EAAA,CACCC,GAAG,+CACHlC,MAAO,CACLC,gBAAiB,UACjBgB,MAAO,OACPC,QAAS,YACTI,aAAc,MACda,eAAgB,OAChBhC,QAAS,OACTyB,WAAY,SACZD,IAAK,MACP,EAEAtB,SAAA,CAAAE,EAAA,IAAC,QAAKP,MAAO,CAAE0B,SAAU,QAAUrB,SAAC,GAAA,CAAA,EAAO,+BAAA,CAAA,CAE7C,CAAA,CACF,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAEJ"}