{"version":3,"file":"FinalQuiz-CEzBIRXF.js","sources":["../../src/pages/Spoofing/FinalQuiz.jsx"],"sourcesContent":["import React, { useState, useContext } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { AuthContext } from '../../context/AuthContext';\r\nimport { getUserProgress, updateUserProgress, createUserProgress } from '../../supabase/progress';\r\nimport AttackPagesHeader from '../../components/AttackPagesHeader/AttackPagesHeader';\r\n\r\nconst FinalQuiz = () => {\r\n  const { user } = useContext(AuthContext);\r\n  const [currentQuestion, setCurrentQuestion] = useState(0);\r\n  const [score, setScore] = useState(0);\r\n  const [showScore, setShowScore] = useState(false);\r\n  const [selectedAnswer, setSelectedAnswer] = useState(null);\r\n  const [isCorrect, setIsCorrect] = useState(null);\r\n  const [isSaving, setIsSaving] = useState(false);\r\n\r\n  const questions = [\r\n    {\r\n      questionText: \"What is the primary goal of DNS spoofing?\",\r\n      answerOptions: [\r\n        { text: \"To redirect users to malicious websites\", isCorrect: true },\r\n        { text: \"To encrypt DNS traffic\", isCorrect: false },\r\n        { text: \"To speed up DNS resolution\", isCorrect: false },\r\n        { text: \"To backup DNS records\", isCorrect: false },\r\n      ],\r\n    },\r\n    {\r\n      questionText: \"Which technique is commonly used in email spoofing?\",\r\n      answerOptions: [\r\n        { text: \"Encrypting email content\", isCorrect: false },\r\n        { text: \"Modifying the sender's address to appear legitimate\", isCorrect: true },\r\n        { text: \"Deleting email headers\", isCorrect: false },\r\n        { text: \"Compressing attachments\", isCorrect: false },\r\n      ],\r\n    },\r\n    {\r\n      questionText: \"How does IP spoofing work?\",\r\n      answerOptions: [\r\n        { text: \"By encrypting IP addresses\", isCorrect: false },\r\n        { text: \"By changing network cables\", isCorrect: false },\r\n        { text: \"By forging the source IP address in packet headers\", isCorrect: true },\r\n        { text: \"By disabling IP routing\", isCorrect: false },\r\n      ],\r\n    },\r\n    {\r\n      questionText: \"Which is an effective defense against DNS spoofing?\",\r\n      answerOptions: [\r\n        { text: \"Using DNSSEC\", isCorrect: true },\r\n        { text: \"Disabling DNS\", isCorrect: false },\r\n        { text: \"Using plain text passwords\", isCorrect: false },\r\n        { text: \"Removing all DNS records\", isCorrect: false },\r\n      ],\r\n    },\r\n    {\r\n      questionText: \"What makes MAC address spoofing possible?\",\r\n      answerOptions: [\r\n        { text: \"Hardware limitations\", isCorrect: false },\r\n        { text: \"Software ability to modify MAC addresses\", isCorrect: true },\r\n        { text: \"Network encryption\", isCorrect: false },\r\n        { text: \"Physical access requirements\", isCorrect: false },\r\n      ],\r\n    },\r\n    {\r\n      questionText: \"Which protection method is most effective against email spoofing?\",\r\n      answerOptions: [\r\n        { text: \"Implementing SPF, DKIM, and DMARC\", isCorrect: true },\r\n        { text: \"Blocking all emails\", isCorrect: false },\r\n        { text: \"Using plain text only\", isCorrect: false },\r\n        { text: \"Disabling email servers\", isCorrect: false },\r\n      ],\r\n    },\r\n    {\r\n      questionText: \"What is ARP spoofing used for?\",\r\n      answerOptions: [\r\n        { text: \"Man-in-the-middle attacks\", isCorrect: true },\r\n        { text: \"Improving network speed\", isCorrect: false },\r\n        { text: \"Backing up data\", isCorrect: false },\r\n        { text: \"Updating software\", isCorrect: false },\r\n      ],\r\n    },\r\n    {\r\n      questionText: \"How can organizations detect MAC address spoofing?\",\r\n      answerOptions: [\r\n        { text: \"Network monitoring and MAC address tracking\", isCorrect: true },\r\n        { text: \"Disabling all network access\", isCorrect: false },\r\n        { text: \"Using older network cards\", isCorrect: false },\r\n        { text: \"Removing security measures\", isCorrect: false },\r\n      ],\r\n    },\r\n    {\r\n      questionText: \"What is a common use of GPS spoofing?\",\r\n      answerOptions: [\r\n        { text: \"To falsify location data\", isCorrect: true },\r\n        { text: \"To improve GPS accuracy\", isCorrect: false },\r\n        { text: \"To save battery life\", isCorrect: false },\r\n        { text: \"To update maps\", isCorrect: false },\r\n      ],\r\n    },\r\n    {\r\n      questionText: \"Which protocol is vulnerable to caller ID spoofing?\",\r\n      answerOptions: [\r\n        { text: \"VoIP protocols\", isCorrect: true },\r\n        { text: \"HTTP\", isCorrect: false },\r\n        { text: \"FTP\", isCorrect: false },\r\n        { text: \"SSH\", isCorrect: false },\r\n      ],\r\n    },\r\n    {\r\n      questionText: \"What makes website spoofing attacks successful?\",\r\n      answerOptions: [\r\n        { text: \"Social engineering and visual mimicry\", isCorrect: true },\r\n        { text: \"Network speed\", isCorrect: false },\r\n        { text: \"Server location\", isCorrect: false },\r\n        { text: \"Database size\", isCorrect: false },\r\n      ],\r\n    },\r\n    {\r\n      questionText: \"How can users protect against spoofing attacks?\",\r\n      answerOptions: [\r\n        { text: \"Using multi-factor authentication and verification\", isCorrect: true },\r\n        { text: \"Disabling all security\", isCorrect: false },\r\n        { text: \"Sharing passwords\", isCorrect: false },\r\n        { text: \"Using public networks\", isCorrect: false },\r\n      ],\r\n    },\r\n    // Practical command questions added\r\n    {\r\n      questionText: \"Which command is used to spoof an IP address ?\",\r\n      answerOptions: [\r\n        { text: \"hping3 -a 192.168.1.100 -S 192.168.1.1 -p 80\", isCorrect: true },\r\n        { text: \"ping 192.168.1.1\", isCorrect: false },\r\n        { text: \"nmap -sS 192.168.1.1\", isCorrect: false },\r\n        { text: \"curl http://example.com\", isCorrect: false },\r\n      ],\r\n    },\r\n    {\r\n      questionText: \"What tool is commonly used for ARP spoofing attacks?\",\r\n      answerOptions: [\r\n        { text: \"arpspoof\", isCorrect: true },\r\n        { text: \"tcpdump\", isCorrect: false },\r\n        { text: \"wireshark\", isCorrect: false },\r\n        { text: \"nmap\", isCorrect: false },\r\n      ],\r\n    },\r\n    {\r\n      questionText: \"Which command can be used to detect MAC address spoofing?\",\r\n      answerOptions: [\r\n        { text: \"arp -a\", isCorrect: true },\r\n        { text: \"ifconfig\", isCorrect: false },\r\n        { text: \"netstat\", isCorrect: false },\r\n        { text: \"ping\", isCorrect: false },\r\n      ],\r\n    },\r\n  ];\r\n\r\n  const handleAnswerClick = (isCorrect, index) => {\r\n    setSelectedAnswer(index);\r\n    setIsCorrect(isCorrect);\r\n    \r\n    if (isCorrect) {\r\n      setScore(score + 1);\r\n    }\r\n    \r\n    setTimeout(() => {\r\n      if (currentQuestion < questions.length - 1) {\r\n        setCurrentQuestion(currentQuestion + 1);\r\n      } else {\r\n        setShowScore(true);\r\n      }\r\n      setSelectedAnswer(null);\r\n      setIsCorrect(null);\r\n    }, 1000);\r\n  };\r\n\r\n  const calculatePercentage = () => {\r\n    return Math.round((score / questions.length) * 100);\r\n  };\r\n\r\n  const saveProgress = async () => {\r\n    if (!user) return;\r\n\r\n    setIsSaving(true);\r\n    try {\r\n      const existingProgress = await getUserProgress(user.id);\r\n\r\n      const newProgress = {\r\n        ...existingProgress?.progress,\r\n        spoofing: {\r\n          ...existingProgress?.progress?.spoofing,\r\n          finalQuiz: {\r\n            completed: true,\r\n            score: score,\r\n            totalQuestions: questions.length,\r\n            percentage: calculatePercentage(),\r\n            completedAt: new Date().toISOString()\r\n          }\r\n        }\r\n      };\r\n\r\n      if (existingProgress) {\r\n        await updateUserProgress(user.id, newProgress);\r\n      } else {\r\n        await createUserProgress(user.id, newProgress);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error saving progress:', error);\r\n    } finally {\r\n      setIsSaving(false);\r\n    }\r\n  };\r\n\r\n  const getScoreMessage = () => {\r\n    const percentage = calculatePercentage();\r\n    if (percentage >= 80) {\r\n      return \"Excellent! You have mastered spoofing attack concepts and protections!\";\r\n    } else if (percentage >= 60) {\r\n      return \"Good job! You understand most concepts but might want to review some topics.\";\r\n    } else {\r\n      return \"You might want to review the material and labs before proceeding.\";\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{\r\n      backgroundColor: '#151B3B',\r\n      minHeight: '100vh',\r\n      display: 'flex',\r\n      flexDirection: 'column'\r\n    }}>\r\n      <AttackPagesHeader pageType=\"spoofing\" />\r\n      <div style={{\r\n        flex: 1,\r\n        color: '#fff',\r\n        padding: '40px',\r\n        fontFamily: 'Georgia, serif'\r\n      }}>\r\n        <div style={{\r\n          maxWidth: '800px',\r\n          margin: '0 auto',\r\n          backgroundColor: '#1a2147',\r\n          padding: '30px',\r\n          borderRadius: '10px',\r\n          boxShadow: '0 0 20px rgba(0,0,0,0.3)'\r\n        }}>\r\n        {showScore ? (\r\n          <div style={{ textAlign: 'center' }}>\r\n            <h2 style={{ color: '#5DADE2', marginBottom: '20px' }}>Final Quiz Complete!</h2>\r\n            <div style={{ \r\n              fontSize: '24px', \r\n              marginBottom: '20px',\r\n              display: 'flex',\r\n              flexDirection: 'column',\r\n              gap: '10px',\r\n              alignItems: 'center'\r\n            }}>\r\n              <p>You scored {score} out of {questions.length}</p>\r\n              <p style={{ color: '#F1C40F' }}>\r\n                Percentage: {calculatePercentage()}%\r\n              </p>\r\n            </div>\r\n            <p style={{ fontSize: '18px', marginBottom: '30px', color: '#F1C40F' }}>\r\n              {getScoreMessage()}\r\n            </p>\r\n            <div style={{ display: 'flex', flexDirection: 'column', gap: '20px' }}>\r\n              <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                <button\r\n                  onClick={() => {\r\n                    setShowScore(false);\r\n                    setCurrentQuestion(0);\r\n                    setScore(0);\r\n                  }}\r\n                  style={{\r\n                    backgroundColor: '#5DADE2',\r\n                    color: '#fff',\r\n                    padding: '10px 20px',\r\n                    borderRadius: '5px',\r\n                    border: 'none',\r\n                    cursor: 'pointer',\r\n                    display: 'flex',\r\n                    alignItems: 'center',\r\n                    gap: '10px'\r\n                  }}\r\n                >\r\n                  <span style={{ fontSize: '20px' }}>←</span>\r\n                  Retake Quiz\r\n                </button>\r\n                <Link\r\n                  to=\"/Sql-Injection/AttackPages/HomePage\"\r\n                  style={{\r\n                    backgroundColor: '#F1C40F',\r\n                    color: '#000',\r\n                    padding: '10px 20px',\r\n                    borderRadius: '5px',\r\n                    textDecoration: 'none'\r\n                  }}\r\n                  onClick={saveProgress}\r\n                >\r\n                  Next Module: Sql-Injection \r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <>\r\n            <div style={{ marginBottom: '20px' }}>\r\n              <h3 style={{ color: '#5DADE2', marginBottom: '10px' }}>\r\n                Question {currentQuestion + 1}/{questions.length}\r\n              </h3>\r\n              <div style={{ \r\n                height: '10px', \r\n                backgroundColor: '#2C3E50',\r\n                borderRadius: '5px',\r\n                overflow: 'hidden'\r\n              }}>\r\n                <div style={{\r\n                  width: `${((currentQuestion + 1) / questions.length) * 100}%`,\r\n                  height: '100%',\r\n                  backgroundColor: '#5DADE2',\r\n                  transition: 'width 0.3s ease'\r\n                }} />\r\n              </div>\r\n            </div>\r\n\r\n            <div style={{ marginBottom: '30px' }}>\r\n              <h2 style={{ color: '#F1C40F', marginBottom: '20px' }}>\r\n                {questions[currentQuestion].questionText}\r\n              </h2>\r\n              <div style={{ display: 'flex', flexDirection: 'column', gap: '10px' }}>\r\n                {questions[currentQuestion].answerOptions.map((option, index) => (\r\n                  <button\r\n                    key={index}\r\n                    onClick={() => handleAnswerClick(option.isCorrect, index)}\r\n                    disabled={selectedAnswer !== null}\r\n                    style={{\r\n                      backgroundColor: selectedAnswer === index \r\n                        ? (isCorrect ? '#2ecc71' : '#e74c3c') \r\n                        : '#2C3E50',\r\n                      border: 'none',\r\n                      padding: '15px',\r\n                      borderRadius: '5px',\r\n                      color: '#fff',\r\n                      cursor: selectedAnswer === null ? 'pointer' : 'default',\r\n                      textAlign: 'left',\r\n                      transition: 'all 0.3s',\r\n                      transform: selectedAnswer === index ? 'scale(1.02)' : 'scale(1)',\r\n                      boxShadow: selectedAnswer === index ? '0 4px 8px rgba(0,0,0,0.2)' : 'none'\r\n                    }}\r\n                  >\r\n                    <div style={{ display: 'flex', alignItems: 'center', gap: '10px' }}>\r\n                      <span style={{ \r\n                        width: '25px',\r\n                        height: '25px',\r\n                        borderRadius: '50%',\r\n                        backgroundColor: '#5DADE2',\r\n                        display: 'flex',\r\n                        alignItems: 'center',\r\n                        justifyContent: 'center',\r\n                        fontSize: '14px',\r\n                        fontWeight: 'bold'\r\n                      }}>\r\n                        {String.fromCharCode(65 + index)}\r\n                      </span>\r\n                      {option.text}\r\n                    </div>\r\n                  </button>\r\n                ))}\r\n              </div>\r\n            </div>\r\n\r\n            {/* Question Navigation Dots */}\r\n            <div style={{ \r\n              display: 'flex', \r\n              justifyContent: 'center',\r\n              gap: '10px',\r\n              marginTop: '30px'\r\n            }}>\r\n              {questions.map((_, index) => (\r\n                <button\r\n                  key={index}\r\n                  onClick={() => setCurrentQuestion(index)}\r\n                  style={{\r\n                    width: '12px',\r\n                    height: '12px',\r\n                    borderRadius: '50%',\r\n                    backgroundColor: currentQuestion === index ? '#F1C40F' : '#2C3E50',\r\n                    border: 'none',\r\n                    cursor: 'pointer',\r\n                    transition: 'all 0.3s'\r\n                  }}\r\n                  onMouseEnter={(e) => {\r\n                    if (currentQuestion !== index) {\r\n                      e.currentTarget.style.backgroundColor = '#34495E';\r\n                    }\r\n                  }}\r\n                  onMouseLeave={(e) => {\r\n                    if (currentQuestion !== index) {\r\n                      e.currentTarget.style.backgroundColor = '#2C3E50';\r\n                    }\r\n                  }}\r\n                />\r\n              ))}\r\n            </div>\r\n          </>\r\n        )}\r\n        </div>\r\n        {/* Bottom navigation */}\r\n        <div style={{\r\n          maxWidth: '800px',\r\n          margin: '20px auto 0',\r\n          display: 'flex',\r\n          justifyContent: 'space-between'\r\n        }}>\r\n          <div style={{ display: 'flex', gap: '10px' }}>\r\n            <Link\r\n              to=\"/\"\r\n              style={{\r\n                backgroundColor: '#5DADE2',\r\n                color: '#fff',\r\n                padding: '10px 20px',\r\n                borderRadius: '5px',\r\n                textDecoration: 'none',\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                gap: '10px'\r\n              }}\r\n            >\r\n              <span style={{ fontSize: '20px' }}>🏠</span>\r\n              Home\r\n            </Link>\r\n            <Link\r\n              to=\"/Spoofing/AttackPages/IpSpoofing\"\r\n              style={{\r\n                backgroundColor: '#34495E',\r\n                color: '#fff',\r\n                padding: '10px 20px',\r\n                borderRadius: '5px',\r\n                textDecoration: 'none',\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                gap: '10px'\r\n              }}\r\n            >\r\n              <span style={{ fontSize: '20px' }}>←</span>\r\n              Return to IP Spoofing\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FinalQuiz;\r\n"],"names":["FinalQuiz","user","useContext","AuthContext","currentQuestion","setCurrentQuestion","useState","score","setScore","showScore","setShowScore","selectedAnswer","setSelectedAnswer","isCorrect","setIsCorrect","isSaving","setIsSaving","questions","questionText","answerOptions","text","handleAnswerClick","index","setTimeout","length","calculatePercentage","Math","round","saveProgress","existingProgress","getUserProgress","id","newProgress","progress","spoofing","finalQuiz","completed","totalQuestions","percentage","completedAt","Date","toISOString","updateUserProgress","createUserProgress","error","console","getScoreMessage","jsxs","style","backgroundColor","minHeight","display","flexDirection","children","jsx","AttackPagesHeader","pageType","flex","color","padding","fontFamily","maxWidth","margin","borderRadius","boxShadow","textAlign","marginBottom","fontSize","gap","alignItems","justifyContent","onClick","border","cursor","Link","to","textDecoration","Fragment","height","overflow","width","transition","map","option","disabled","transform","fontWeight","String","fromCharCode","marginTop","_","onMouseEnter","e","currentTarget","onMouseLeave"],"mappings":"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"}