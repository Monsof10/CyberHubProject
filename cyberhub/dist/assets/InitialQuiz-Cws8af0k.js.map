{"version":3,"file":"InitialQuiz-Cws8af0k.js","sources":["../../src/pages/Spoofing/InitialQuiz.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport AttackPagesHeader from '../../components/AttackPagesHeader/AttackPagesHeader';\r\n\r\nconst InitialQuiz = () => {\r\n  const [currentQuestion, setCurrentQuestion] = useState(0);\r\n  const [score, setScore] = useState(0);\r\n  const [showScore, setShowScore] = useState(false);\r\n  const [selectedAnswer, setSelectedAnswer] = useState(null);\r\n  const [isCorrect, setIsCorrect] = useState(null);\r\n\r\n  const questions = [\r\n    {\r\n      questionText: \"What is spoofing in cybersecurity?\",\r\n      answerOptions: [\r\n        { text: \"Making legitimate services faster\", isCorrect: false },\r\n        { text: \"Impersonating trusted entities or devices\", isCorrect: true },\r\n        { text: \"Encrypting network traffic\", isCorrect: false },\r\n        { text: \"Creating network backups\", isCorrect: false },\r\n      ],\r\n    },\r\n    {\r\n      questionText: \"Which of these is a common type of spoofing attack?\",\r\n      answerOptions: [\r\n        { text: \"File compression\", isCorrect: false },\r\n        { text: \"DNS spoofing\", isCorrect: true },\r\n        { text: \"Data backup\", isCorrect: false },\r\n        { text: \"System updates\", isCorrect: false },\r\n      ],\r\n    },\r\n    {\r\n      questionText: \"Why are spoofing attacks dangerous?\",\r\n      answerOptions: [\r\n        { text: \"They can trick users into trusting malicious sources\", isCorrect: true },\r\n        { text: \"They make networks faster\", isCorrect: false },\r\n        { text: \"They improve security\", isCorrect: false },\r\n        { text: \"They update software automatically\", isCorrect: false },\r\n      ],\r\n    },\r\n    {\r\n      questionText: \"What is a common goal of email spoofing?\",\r\n      answerOptions: [\r\n        { text: \"To improve email delivery\", isCorrect: false },\r\n        { text: \"To conduct phishing attacks\", isCorrect: true },\r\n        { text: \"To speed up email servers\", isCorrect: false },\r\n        { text: \"To backup email data\", isCorrect: false },\r\n      ],\r\n    },\r\n    {\r\n      questionText: \"Which protocol can be vulnerable to spoofing?\",\r\n      answerOptions: [\r\n        { text: \"All of the mentioned\", isCorrect: true },\r\n        { text: \"DNS\", isCorrect: false },\r\n        { text: \"ARP\", isCorrect: false },\r\n        { text: \"IP\", isCorrect: false },\r\n      ],\r\n    },\r\n    {\r\n      questionText: \"What is a basic defense against spoofing attacks?\",\r\n      answerOptions: [\r\n        { text: \"Authentication and verification mechanisms\", isCorrect: true },\r\n        { text: \"Disabling all network services\", isCorrect: false },\r\n        { text: \"Using older software versions\", isCorrect: false },\r\n        { text: \"Removing security measures\", isCorrect: false },\r\n      ],\r\n    }\r\n  ];\r\n\r\n  const handleAnswerClick = (isCorrect, index) => {\r\n    setSelectedAnswer(index);\r\n    setIsCorrect(isCorrect);\r\n    \r\n    if (isCorrect) {\r\n      setScore(score + 1);\r\n    }\r\n    \r\n    setTimeout(() => {\r\n      if (currentQuestion < questions.length - 1) {\r\n        setCurrentQuestion(currentQuestion + 1);\r\n      } else {\r\n        setShowScore(true);\r\n      }\r\n      setSelectedAnswer(null);\r\n      setIsCorrect(null);\r\n    }, 1000);\r\n  };\r\n\r\n  const calculatePercentage = () => {\r\n    return Math.round((score / questions.length) * 100);\r\n  };\r\n\r\n  const getScoreMessage = () => {\r\n    const percentage = calculatePercentage();\r\n    if (percentage >= 80) {\r\n      return \"Excellent! You have a strong foundation in spoofing concepts!\";\r\n    } else if (percentage >= 60) {\r\n      return \"Good job! You understand the basics but might want to review some concepts.\";\r\n    } else {\r\n      return \"You might want to review the material before proceeding.\";\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{\r\n      backgroundColor: '#151B3B',\r\n      minHeight: '100vh',\r\n      display: 'flex',\r\n      flexDirection: 'column'\r\n    }}>\r\n      <AttackPagesHeader pageType=\"spoofing\" />\r\n      <div style={{\r\n        flex: 1,\r\n        color: '#fff',\r\n        padding: '40px',\r\n        fontFamily: 'Georgia, serif'\r\n      }}>\r\n        <div style={{\r\n          maxWidth: '800px',\r\n          margin: '0 auto',\r\n          backgroundColor: '#1a2147',\r\n          padding: '30px',\r\n          borderRadius: '10px',\r\n          boxShadow: '0 0 20px rgba(0,0,0,0.3)'\r\n        }}>\r\n          {showScore ? (\r\n            <div style={{ textAlign: 'center' }}>\r\n              <h2 style={{ color: '#5DADE2', marginBottom: '20px' }}>Initial Quiz Complete!</h2>\r\n              <div style={{ \r\n                fontSize: '24px', \r\n                marginBottom: '20px',\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n                gap: '10px',\r\n                alignItems: 'center'\r\n              }}>\r\n                <p>You scored {score} out of {questions.length}</p>\r\n                <p style={{ color: '#F1C40F' }}>\r\n                  Percentage: {calculatePercentage()}%\r\n                </p>\r\n              </div>\r\n              <p style={{ fontSize: '18px', marginBottom: '30px', color: '#F1C40F' }}>\r\n                {getScoreMessage()}\r\n              </p>\r\n              <div style={{ display: 'flex', flexDirection: 'column', gap: '20px' }}>\r\n                <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                  <button\r\n                    onClick={() => {\r\n                      setShowScore(false);\r\n                      setCurrentQuestion(0);\r\n                      setScore(0);\r\n                    }}\r\n                    style={{\r\n                      backgroundColor: '#5DADE2',\r\n                      color: '#fff',\r\n                      padding: '10px 20px',\r\n                      borderRadius: '5px',\r\n                      border: 'none',\r\n                      cursor: 'pointer',\r\n                      display: 'flex',\r\n                      alignItems: 'center',\r\n                      gap: '10px'\r\n                    }}\r\n                  >\r\n                    <span style={{ fontSize: '20px' }}>‚Üê</span>\r\n                    Retake Quiz\r\n                  </button>\r\n                  <Link\r\n                    to=\"/Spoofing/AttackPages/DnsSpoofing\"\r\n                    style={{\r\n                      backgroundColor: '#F1C40F',\r\n                      color: '#000',\r\n                      padding: '10px 20px',\r\n                      borderRadius: '5px',\r\n                      textDecoration: 'none'\r\n                    }}\r\n                  >\r\n                    Continue to DNS Spoofing\r\n                  </Link>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <>\r\n              <div style={{ marginBottom: '20px' }}>\r\n                <h3 style={{ color: '#5DADE2', marginBottom: '10px' }}>\r\n                  Question {currentQuestion + 1}/{questions.length}\r\n                </h3>\r\n                <div style={{ \r\n                  height: '10px', \r\n                  backgroundColor: '#2C3E50',\r\n                  borderRadius: '5px',\r\n                  overflow: 'hidden'\r\n                }}>\r\n                  <div style={{\r\n                    width: `${((currentQuestion + 1) / questions.length) * 100}%`,\r\n                    height: '100%',\r\n                    backgroundColor: '#5DADE2',\r\n                    transition: 'width 0.3s ease'\r\n                  }} />\r\n                </div>\r\n              </div>\r\n\r\n              <div style={{ marginBottom: '30px' }}>\r\n                <h2 style={{ color: '#F1C40F', marginBottom: '20px' }}>\r\n                  {questions[currentQuestion].questionText}\r\n                </h2>\r\n                <div style={{ display: 'flex', flexDirection: 'column', gap: '10px' }}>\r\n                  {questions[currentQuestion].answerOptions.map((option, index) => (\r\n                    <button\r\n                      key={index}\r\n                      onClick={() => handleAnswerClick(option.isCorrect, index)}\r\n                      disabled={selectedAnswer !== null}\r\n                      style={{\r\n                        backgroundColor: selectedAnswer === index \r\n                          ? (isCorrect ? '#2ecc71' : '#e74c3c') \r\n                          : '#2C3E50',\r\n                        border: 'none',\r\n                        padding: '15px',\r\n                        borderRadius: '5px',\r\n                        color: '#fff',\r\n                        cursor: selectedAnswer === null ? 'pointer' : 'default',\r\n                        textAlign: 'left',\r\n                        transition: 'all 0.3s',\r\n                        transform: selectedAnswer === index ? 'scale(1.02)' : 'scale(1)',\r\n                        boxShadow: selectedAnswer === index ? '0 4px 8px rgba(0,0,0,0.2)' : 'none'\r\n                      }}\r\n                    >\r\n                      <div style={{ display: 'flex', alignItems: 'center', gap: '10px' }}>\r\n                        <span style={{ \r\n                          width: '25px',\r\n                          height: '25px',\r\n                          borderRadius: '50%',\r\n                          backgroundColor: '#5DADE2',\r\n                          display: 'flex',\r\n                          alignItems: 'center',\r\n                          justifyContent: 'center',\r\n                          fontSize: '14px',\r\n                          fontWeight: 'bold'\r\n                        }}>\r\n                          {String.fromCharCode(65 + index)}\r\n                        </span>\r\n                        {option.text}\r\n                      </div>\r\n                    </button>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n\r\n              {/* Question Navigation Dots */}\r\n              <div style={{ \r\n                display: 'flex', \r\n                justifyContent: 'center',\r\n                gap: '10px',\r\n                marginTop: '30px'\r\n              }}>\r\n                {questions.map((_, index) => (\r\n                  <button\r\n                    key={index}\r\n                    onClick={() => setCurrentQuestion(index)}\r\n                    style={{\r\n                      width: '12px',\r\n                      height: '12px',\r\n                      borderRadius: '50%',\r\n                      backgroundColor: currentQuestion === index ? '#F1C40F' : '#2C3E50',\r\n                      border: 'none',\r\n                      cursor: 'pointer',\r\n                      transition: 'all 0.3s'\r\n                    }}\r\n                    onMouseEnter={(e) => {\r\n                      if (currentQuestion !== index) {\r\n                        e.currentTarget.style.backgroundColor = '#34495E';\r\n                      }\r\n                    }}\r\n                    onMouseLeave={(e) => {\r\n                      if (currentQuestion !== index) {\r\n                        e.currentTarget.style.backgroundColor = '#2C3E50';\r\n                      }\r\n                    }}\r\n                  />\r\n                ))}\r\n              </div>\r\n            </>\r\n          )}\r\n        </div>\r\n        {/* Bottom navigation */}\r\n        <div style={{\r\n          maxWidth: '800px',\r\n          margin: '20px auto 0',\r\n          display: 'flex',\r\n          justifyContent: 'space-between'\r\n        }}>\r\n          <div style={{ display: 'flex', gap: '10px' }}>\r\n            <Link\r\n              to=\"/\"\r\n              style={{\r\n                backgroundColor: '#5DADE2',\r\n                color: '#fff',\r\n                padding: '10px 20px',\r\n                borderRadius: '5px',\r\n                textDecoration: 'none',\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                gap: '10px'\r\n              }}\r\n            >\r\n              <span style={{ fontSize: '20px' }}>üè†</span>\r\n              Home\r\n            </Link>\r\n            <Link\r\n              to=\"/Spoofing/Article\"\r\n              style={{\r\n                backgroundColor: '#34495E',\r\n                color: '#fff',\r\n                padding: '10px 20px',\r\n                borderRadius: '5px',\r\n                textDecoration: 'none',\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                gap: '10px'\r\n              }}\r\n            >\r\n              <span style={{ fontSize: '20px' }}>‚Üê</span>\r\n              Return to Article\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InitialQuiz;\r\n"],"names":["InitialQuiz","currentQuestion","setCurrentQuestion","useState","score","setScore","showScore","setShowScore","selectedAnswer","setSelectedAnswer","isCorrect","setIsCorrect","questions","questionText","answerOptions","text","handleAnswerClick","index","setTimeout","length","calculatePercentage","Math","round","getScoreMessage","percentage","jsxs","style","backgroundColor","minHeight","display","flexDirection","children","jsx","AttackPagesHeader","pageType","flex","color","padding","fontFamily","maxWidth","margin","borderRadius","boxShadow","textAlign","marginBottom","fontSize","gap","alignItems","justifyContent","onClick","border","cursor","Link","to","textDecoration","Fragment","height","overflow","width","transition","map","option","disabled","transform","fontWeight","String","fromCharCode","marginTop","_","onMouseEnter","e","currentTarget","onMouseLeave"],"mappings":"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"}