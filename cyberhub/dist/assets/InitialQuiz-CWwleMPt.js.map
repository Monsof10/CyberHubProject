{"version":3,"file":"InitialQuiz-CWwleMPt.js","sources":["../../src/pages/Sql-Injection/InitialQuiz.jsx"],"sourcesContent":["import React, { useState, useContext } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport AttackPagesHeader from '../../components/AttackPagesHeader/AttackPagesHeader';\r\nimport ModuleProgressCircle from '../../components/ModuleProgressCircle';\r\nimport { AuthContext } from '../../context/AuthContext';\r\n\r\nconst InitialQuiz = () => {\r\n  const [currentQuestion, setCurrentQuestion] = useState(0);\r\n  const [score, setScore] = useState(0);\r\n  const [showScore, setShowScore] = useState(false);\r\n  const [selectedAnswer, setSelectedAnswer] = useState(null);\r\n  const [isCorrect, setIsCorrect] = useState(null);\r\n  const { user } = useContext(AuthContext);\r\n\r\n  // Module progress data\r\n  const moduleData = {\r\n    status: 'initial_quiz_started',\r\n    component_progress: {\r\n      article: { completed: true, started: true },\r\n      initial_quiz: { started: true, completed: false },\r\n      labs: {\r\n        first: { started: false, completed: false },\r\n        second: { started: false, completed: false },\r\n        third: { started: false, completed: false }\r\n      },\r\n      final_quiz: { started: false, completed: false }\r\n    }\r\n  };\r\n\r\n  // ... (keeping all the existing questions array and helper functions)\r\n  const questions = [\r\n    {\r\n      questionText: \"What is SQL Injection?\",\r\n      answerOptions: [\r\n        { text: \"A technique to optimize SQL queries\", isCorrect: false },\r\n        { text: \"A method to inject malicious SQL code into queries\", isCorrect: true },\r\n        { text: \"A way to backup databases\", isCorrect: false },\r\n        { text: \"A database management tool\", isCorrect: false },\r\n      ],\r\n    },\r\n    {\r\n      questionText: \"Which of these is a common target for SQL injection?\",\r\n      answerOptions: [\r\n        { text: \"Login forms\", isCorrect: true },\r\n        { text: \"Image files\", isCorrect: false },\r\n        { text: \"Network cables\", isCorrect: false },\r\n        { text: \"CPU processors\", isCorrect: false },\r\n      ],\r\n    },\r\n    {\r\n      questionText: \"Why are SQL injection attacks dangerous?\",\r\n      answerOptions: [\r\n        { text: \"They can expose sensitive database data\", isCorrect: true },\r\n        { text: \"They make databases faster\", isCorrect: false },\r\n        { text: \"They improve security\", isCorrect: false },\r\n        { text: \"They update software automatically\", isCorrect: false },\r\n      ],\r\n    },\r\n    {\r\n      questionText: \"What can an attacker potentially do with SQL injection?\",\r\n      answerOptions: [\r\n        { text: \"All of the mentioned\", isCorrect: true },\r\n        { text: \"Read sensitive data\", isCorrect: false },\r\n        { text: \"Modify database data\", isCorrect: false },\r\n        { text: \"Delete records\", isCorrect: false },\r\n      ],\r\n    },\r\n    {\r\n      questionText: \"Which input field is commonly vulnerable to SQL injection?\",\r\n      answerOptions: [\r\n        { text: \"Search boxes\", isCorrect: true },\r\n        { text: \"Audio files\", isCorrect: false },\r\n        { text: \"Image uploads\", isCorrect: false },\r\n        { text: \"Video players\", isCorrect: false },\r\n      ],\r\n    },\r\n    {\r\n      questionText: \"What is a basic defense against SQL injection?\",\r\n      answerOptions: [\r\n        { text: \"Input validation and sanitization\", isCorrect: true },\r\n        { text: \"Disabling the database\", isCorrect: false },\r\n        { text: \"Using plain text passwords\", isCorrect: false },\r\n        { text: \"Removing all user inputs\", isCorrect: false },\r\n      ],\r\n    }\r\n  ];\r\n\r\n  const handleAnswerClick = (isCorrect, index) => {\r\n    setSelectedAnswer(index);\r\n    setIsCorrect(isCorrect);\r\n    \r\n    if (isCorrect) {\r\n      setScore(score + 1);\r\n    }\r\n    \r\n    setTimeout(() => {\r\n      if (currentQuestion < questions.length - 1) {\r\n        setCurrentQuestion(currentQuestion + 1);\r\n      } else {\r\n        setShowScore(true);\r\n      }\r\n      setSelectedAnswer(null);\r\n      setIsCorrect(null);\r\n    }, 1000);\r\n  };\r\n\r\n  const calculatePercentage = () => {\r\n    return Math.round((score / questions.length) * 100);\r\n  };\r\n\r\n  const getScoreMessage = () => {\r\n    const percentage = calculatePercentage();\r\n    if (percentage >= 80) {\r\n      return \"Excellent! You have a strong foundation in SQL injection concepts!\";\r\n    } else if (percentage >= 60) {\r\n      return \"Good job! You understand the basics but might want to review some concepts.\";\r\n    } else {\r\n      return \"You might want to review the material before proceeding.\";\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{\r\n      backgroundColor: '#151B3B',\r\n      minHeight: '100vh',\r\n      display: 'flex',\r\n      flexDirection: 'column'\r\n    }}>\r\n      <div style={{ position: 'relative' }}>\r\n        <AttackPagesHeader pageType=\"sql\" />\r\n        {user && (\r\n          <div style={{\r\n            position: 'fixed',\r\n            top: '50%',\r\n            left: '20px',\r\n            transform: 'translateY(-50%)',\r\n            zIndex: 1000\r\n          }}>\r\n            <ModuleProgressCircle \r\n              module={moduleData}\r\n              size=\"small\"\r\n            />\r\n          </div>\r\n        )}\r\n      </div>\r\n      <div style={{\r\n        flex: 1,\r\n        color: '#fff',\r\n        padding: '40px',\r\n        fontFamily: 'Georgia, serif'\r\n      }}>\r\n        <div style={{\r\n          maxWidth: '800px',\r\n          margin: '0 auto',\r\n          backgroundColor: '#1a2147',\r\n          padding: '30px',\r\n          borderRadius: '10px',\r\n          boxShadow: '0 0 20px rgba(0,0,0,0.3)'\r\n        }}>\r\n          {showScore ? (\r\n            <div style={{ textAlign: 'center' }}>\r\n              <h2 style={{ color: '#5DADE2', marginBottom: '20px' }}>Initial Quiz Complete!</h2>\r\n              <div style={{ \r\n                fontSize: '24px', \r\n                marginBottom: '20px',\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n                gap: '10px',\r\n                alignItems: 'center'\r\n              }}>\r\n                <p>You scored {score} out of {questions.length}</p>\r\n                <p style={{ color: '#F1C40F' }}>\r\n                  Percentage: {calculatePercentage()}%\r\n                </p>\r\n              </div>\r\n              <p style={{ fontSize: '18px', marginBottom: '30px', color: '#F1C40F' }}>\r\n                {getScoreMessage()}\r\n              </p>\r\n              <div style={{ display: 'flex', flexDirection: 'column', gap: '20px' }}>\r\n                <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                  <button\r\n                    onClick={() => {\r\n                      setShowScore(false);\r\n                      setCurrentQuestion(0);\r\n                      setScore(0);\r\n                    }}\r\n                    style={{\r\n                      backgroundColor: '#5DADE2',\r\n                      color: '#fff',\r\n                      padding: '10px 20px',\r\n                      borderRadius: '5px',\r\n                      border: 'none',\r\n                      cursor: 'pointer',\r\n                      display: 'flex',\r\n                      alignItems: 'center',\r\n                      gap: '10px'\r\n                    }}\r\n                  >\r\n                    <span style={{ fontSize: '20px' }}>‚Üê</span>\r\n                    Retake Quiz\r\n                  </button>\r\n                  <Link\r\n                    to=\"/Sql-Injection/AttackPages/ClassicSqlInjection\"\r\n                    style={{\r\n                      backgroundColor: '#F1C40F',\r\n                      color: '#000',\r\n                      padding: '10px 20px',\r\n                      borderRadius: '5px',\r\n                      textDecoration: 'none'\r\n                    }}\r\n                  >\r\n                    Continue to Classic Sql Injection\r\n                  </Link>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <>\r\n              <div style={{ marginBottom: '20px' }}>\r\n                <h3 style={{ color: '#5DADE2', marginBottom: '10px' }}>\r\n                  Question {currentQuestion + 1}/{questions.length}\r\n                </h3>\r\n                <div style={{ \r\n                  height: '10px', \r\n                  backgroundColor: '#2C3E50',\r\n                  borderRadius: '5px',\r\n                  overflow: 'hidden'\r\n                }}>\r\n                  <div style={{\r\n                    width: `${((currentQuestion + 1) / questions.length) * 100}%`,\r\n                    height: '100%',\r\n                    backgroundColor: '#5DADE2',\r\n                    transition: 'width 0.3s ease'\r\n                  }} />\r\n                </div>\r\n              </div>\r\n\r\n              <div style={{ marginBottom: '30px' }}>\r\n                <h2 style={{ color: '#F1C40F', marginBottom: '20px' }}>\r\n                  {questions[currentQuestion].questionText}\r\n                </h2>\r\n                <div style={{ display: 'flex', flexDirection: 'column', gap: '10px' }}>\r\n                  {questions[currentQuestion].answerOptions.map((option, index) => (\r\n                    <button\r\n                      key={index}\r\n                      onClick={() => handleAnswerClick(option.isCorrect, index)}\r\n                      disabled={selectedAnswer !== null}\r\n                      style={{\r\n                        backgroundColor: selectedAnswer === index \r\n                          ? (isCorrect ? '#2ecc71' : '#e74c3c') \r\n                          : '#2C3E50',\r\n                        border: 'none',\r\n                        padding: '15px',\r\n                        borderRadius: '5px',\r\n                        color: '#fff',\r\n                        cursor: selectedAnswer === null ? 'pointer' : 'default',\r\n                        textAlign: 'left',\r\n                        transition: 'all 0.3s',\r\n                        transform: selectedAnswer === index ? 'scale(1.02)' : 'scale(1)',\r\n                        boxShadow: selectedAnswer === index ? '0 4px 8px rgba(0,0,0,0.2)' : 'none'\r\n                      }}\r\n                    >\r\n                      <div style={{ display: 'flex', alignItems: 'center', gap: '10px' }}>\r\n                        <span style={{ \r\n                          width: '25px',\r\n                          height: '25px',\r\n                          borderRadius: '50%',\r\n                          backgroundColor: '#5DADE2',\r\n                          display: 'flex',\r\n                          alignItems: 'center',\r\n                          justifyContent: 'center',\r\n                          fontSize: '14px',\r\n                          fontWeight: 'bold'\r\n                        }}>\r\n                          {String.fromCharCode(65 + index)}\r\n                        </span>\r\n                        {option.text}\r\n                      </div>\r\n                    </button>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n\r\n              {/* Question Navigation Dots */}\r\n              <div style={{ \r\n                display: 'flex', \r\n                justifyContent: 'center',\r\n                gap: '10px',\r\n                marginTop: '30px'\r\n              }}>\r\n                {questions.map((_, index) => (\r\n                  <button\r\n                    key={index}\r\n                    onClick={() => setCurrentQuestion(index)}\r\n                    style={{\r\n                      width: '12px',\r\n                      height: '12px',\r\n                      borderRadius: '50%',\r\n                      backgroundColor: currentQuestion === index ? '#F1C40F' : '#2C3E50',\r\n                      border: 'none',\r\n                      cursor: 'pointer',\r\n                      transition: 'all 0.3s'\r\n                    }}\r\n                    onMouseEnter={(e) => {\r\n                      if (currentQuestion !== index) {\r\n                        e.currentTarget.style.backgroundColor = '#34495E';\r\n                      }\r\n                    }}\r\n                    onMouseLeave={(e) => {\r\n                      if (currentQuestion !== index) {\r\n                        e.currentTarget.style.backgroundColor = '#2C3E50';\r\n                      }\r\n                    }}\r\n                  />\r\n                ))}\r\n              </div>\r\n            </>\r\n          )}\r\n        </div>\r\n        {/* Bottom navigation */}\r\n        <div style={{\r\n          maxWidth: '800px',\r\n          margin: '20px auto 0',\r\n          display: 'flex',\r\n          justifyContent: 'space-between'\r\n        }}>\r\n          <div style={{ display: 'flex', gap: '500px' }}>\r\n            <Link\r\n              to=\"/Sql-Injection/Article\"\r\n              style={{\r\n                backgroundColor: '#34495E',\r\n                color: '#fff',\r\n                padding: '10px 20px',\r\n                borderRadius: '5px',\r\n                textDecoration: 'none',\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                gap: '10px'\r\n              }}\r\n            >\r\n              <span style={{ fontSize: '20px' }}>‚Üê</span>\r\n              Return to Article\r\n            </Link>\r\n            <Link\r\n              to=\"/\"\r\n              style={{\r\n                backgroundColor: '#5DADE2',\r\n                color: '#fff',\r\n                padding: '10px 20px',\r\n                borderRadius: '5px',\r\n                textDecoration: 'none',\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                gap: '10px'\r\n              }}\r\n            >\r\n              <span style={{ fontSize: '20px' }}>üè†</span>\r\n              Home\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InitialQuiz;\r\n"],"names":["InitialQuiz","currentQuestion","setCurrentQuestion","useState","score","setScore","showScore","setShowScore","selectedAnswer","setSelectedAnswer","isCorrect","setIsCorrect","user","useContext","AuthContext","moduleData","status","component_progress","article","completed","started","initial_quiz","labs","first","second","third","final_quiz","questions","questionText","answerOptions","text","handleAnswerClick","index","setTimeout","length","calculatePercentage","Math","round","getScoreMessage","percentage","jsxs","style","backgroundColor","minHeight","display","flexDirection","children","position","jsx","AttackPagesHeader","pageType","top","left","transform","zIndex","ModuleProgressCircle","module","size","flex","color","padding","fontFamily","maxWidth","margin","borderRadius","boxShadow","textAlign","marginBottom","fontSize","gap","alignItems","justifyContent","onClick","border","cursor","Link","to","textDecoration","Fragment","height","overflow","width","transition","map","option","disabled","fontWeight","String","fromCharCode","marginTop","_","onMouseEnter","e","currentTarget","onMouseLeave"],"mappings":"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"}